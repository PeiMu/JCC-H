execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3329.244..3345.028 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2885.410..3262.028 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2885.398..3174.332 rows=60487 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2878.000..3043.204 rows=20162 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2877.977..2924.989 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27368kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1214.637..2703.472 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1214.533..2659.255 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=963.048..2289.995 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.090..1014.835 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=960.600..960.600 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=27.941..905.206 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=23.570..23.570 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=250.625..250.625 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.026..144.332 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.061..0.061 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.039..0.043 rows=25 loops=3)
 Planning time: 4.692 ms
 Execution time: 3355.867 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=902.209..902.210 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=205.871..205.871 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.316..139.462 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.298..1.672 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.025 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.270..1.346 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.233..0.233 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.005..0.063 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=774.849..902.105 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=563.814..583.987 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.374..444.779 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.319..5.998 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.036..0.042 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.276..5.490 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.240..0.240 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.224 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.210 ms
 Execution time: 903.929 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1641.288..1641.290 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1631.493..1649.286 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1625.391..1635.130 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1624.249..1625.954 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2835kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.247..1603.862 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.182..1188.957 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.713 ms
 Execution time: 1649.912 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=866.697..866.697 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=164.690..814.561 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.855..606.583 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.582..12.582 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=146.760..146.760 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.023..81.991 rows=200000 loops=1)
 Planning time: 2.720 ms
 Execution time: 867.037 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2061.570..2062.842 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1664.363..1994.724 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1664.339..1820.330 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=131.504..683.178 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.694..399.084 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.242..6.658 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=124.263..124.263 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.012..109.303 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.837 ms
 Execution time: 2067.187 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=10698.111..10698.112 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10576.466..10698.042 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10454.749..10715.928 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=9980.522..10101.584 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=9897.282..9979.232 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: quicksort  Memory: 25kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=9138.372..9632.453 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=9138.298..9301.336 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=150.355..663.721 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.038..227.047 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=148.843..148.843 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.028..101.487 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8475.089..8475.089 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=610.543..8474.886 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.066..6390.376 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.083..143.036 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.194 ms
 Execution time: 10716.442 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=4441.387..4441.387 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=2746.943..4448.611 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=3746.811..3746.811 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=1439.614..3746.760 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.551..34.666 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=56.207..56.231 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=67056 lossy=33035
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.809..1.809 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.501 ms
 Execution time: 4449.011 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4276.664..4276.769 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4276.601..4276.603 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4276.362..4284.277 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4270.453..4270.476 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.037..1141.635 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.040 ms
 Execution time: 4284.921 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7547.298..7547.405 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7518.029..7536.864 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7517.950..7535.586 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7517.899..7519.363 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=3.522..7475.921 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=3.039..3.271 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=6.413..30.350 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=257.499..372.871 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.034 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.766 ms
 Execution time: 7548.117 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=5506.322..5506.441 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=5490.200..5498.338 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=5490.187..5492.679 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.107..5355.070 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.503..2755.182 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.915..4296.182 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.866..3125.756 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.753..1468.470 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.043..1213.813 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.608..2.608 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.272..1.909 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.029..0.031 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.230..1.545 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.192..0.192 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.007..0.007 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.328 ms
 Execution time: 5507.479 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1237.972..1241.001 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1117.451..1217.460 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1117.414..1178.375 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1110.857..1139.752 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1110.836..1112.834 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2867kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=127.063..1090.018 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=126.910..393.996 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.045..220.059 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=126.269..126.269 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.033..116.540 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.026..0.027 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.427 ms
 Execution time: 1243.441 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1210.328..1217.772 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1207.856..1223.732 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1200.728..1210.295 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1198.285..1202.049 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3881kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.890..1157.043 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.805..268.060 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8690
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.373..28.373 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.749 ms
 Execution time: 1224.356 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2080.993..2080.993 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2080.897..2080.949 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2080.874..2089.160 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2053.216..2053.252 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=2025.635..2029.928 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3212kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.326..1993.231 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.856..1940.355 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.721..1294.268 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.244..44.776 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.033..28.574 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.135..0.135 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.119..0.125 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.033..0.036 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.026..0.028 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.057..0.124 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.034..0.039 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.173..7.173 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.028..4.436 rows=10000 loops=3)
 Planning time: 6.970 ms
 Execution time: 2090.144 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1226.137..1226.137 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1225.065..1233.419 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1219.484..1219.485 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=252.065..1145.210 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14406 lossy=11067
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=246.849..246.849 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.680 ms
 Execution time: 1233.666 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=9461.363..9461.363 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=9461.324..9461.505 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=9312.395..9312.395 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=9290.389..9295.250 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6739.857..9257.589 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.832..9085.543 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.255..2697.168 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.151..52.025 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.033..31.145 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.058..0.058 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.038..0.043 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.016..0.141 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.032..0.033 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.897..6.898 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.117..5.619 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.028..3.343 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.038..0.039 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.014 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.320 ms
 Execution time: 9462.077 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7484.988..7484.995 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7469.656..7492.953 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7462.692..7477.740 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7447.644..7449.693 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3143kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=118.329..7419.581 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=118.185..7390.510 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=118.132..7298.785 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=117.797..7234.318 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=117.683..5641.781 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=117.608..1424.919 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.032..801.631 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=117.526..117.526 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.074..116.376 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.112..0.112 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.089..0.096 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.043..0.044 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.031..0.032 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.065..0.065 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.040..0.044 rows=25 loops=3)
 Planning time: 8.219 ms
 Execution time: 7493.931 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=9128.587..10289.029 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=9089.466..10312.153 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=8027.692..9110.842 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=7981.363..8293.549 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 58304kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=5.765..6925.051 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=5.656..3218.951 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=5.529..323.901 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=5.380..293.822 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=5.290..88.778 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.154..30.719 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.088..6.570 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.065..0.065 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.038 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.738 ms
 Execution time: 10325.682 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3173.682..3189.514 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2776.533..3110.194 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2776.514..3022.277 rows=60497 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2767.500..2934.802 rows=20166 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2767.476..2815.722 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27392kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1086.324..2591.493 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1086.208..2547.036 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=862.481..2205.039 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.036..1027.922 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=860.108..860.108 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.349..804.753 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=21.972..21.972 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=222.872..222.872 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.026..118.373 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.062..0.062 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
 Planning time: 4.540 ms
 Execution time: 3200.366 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=930.655..930.656 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=216.390..216.390 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.308..150.375 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.291..2.555 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.018..0.023 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.266..2.224 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.230..0.230 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.068 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=803.180..930.562 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=581.668..601.767 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.371..462.902 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.316..6.060 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.034..0.038 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.268..5.546 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.241..0.241 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.014..0.234 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.509 ms
 Execution time: 932.204 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1626.989..1626.991 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1617.076..1634.479 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1610.924..1620.677 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1609.759..1611.469 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2832kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.224..1589.316 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.155..1184.024 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.561 ms
 Execution time: 1635.099 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=876.567..876.567 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=164.692..824.410 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.960..616.180 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.684..12.684 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=146.650..146.650 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.045..82.199 rows=200000 loops=1)
 Planning time: 2.687 ms
 Execution time: 876.919 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2060.553..2061.825 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1663.912..1993.735 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1663.888..1819.399 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=128.428..679.141 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.424..398.537 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.246..6.380 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=121.454..121.454 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.035..106.481 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.823 ms
 Execution time: 2066.725 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=10651.626..10651.626 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10651.547..10651.556 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10530.357..10651.685 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=10317.199..10397.308 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=10194.521..10276.221 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external sort  Disk: 32880kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=9419.675..9937.174 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=9419.570..9600.828 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=149.760..663.936 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.042..225.168 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=148.296..148.296 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.028..101.006 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8773.255..8773.255 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=625.859..8773.068 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.051..6683.142 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.089..145.667 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.165 ms
 Execution time: 10658.965 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=5134.634..5134.634 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=3349.746..5142.049 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=4282.357..4282.357 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=802.780..4282.313 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.973..34.591 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=64.325..64.346 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=64141 lossy=33035
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.828..1.828 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.546 ms
 Execution time: 5142.463 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4319.623..4319.691 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4319.540..4319.542 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4319.179..4330.828 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4313.501..4313.524 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.049..1189.281 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.043 ms
 Execution time: 4331.491 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7714.847..7714.953 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7685.338..7704.428 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7685.260..7703.143 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7685.205..7686.653 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=4.160..7643.231 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=3.065..3.263 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=3.760..29.679 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=264.464..381.229 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.032..0.036 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.667 ms
 Execution time: 7715.650 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=5457.576..5457.695 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=5441.356..5449.578 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=5441.345..5443.881 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.035..5305.968 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.420..2694.307 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.821..4248.111 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.777..3087.152 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.676..1461.402 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.048..1205.273 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.532..2.532 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.266..1.859 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.225..1.497 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.186..0.186 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.007..0.007 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.187 ms
 Execution time: 5458.747 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1128.681..1131.695 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1012.736..1108.202 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1012.722..1069.117 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1006.563..1035.449 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1006.544..1008.542 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2822kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=120.201..986.038 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=120.073..374.809 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.039..209.086 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=119.438..119.438 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.030..109.669 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.023..0.023 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.346 ms
 Execution time: 1134.032 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1208.244..1216.131 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1205.797..1222.095 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1198.593..1208.163 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1196.182..1199.939 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3900kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.957..1155.114 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.866..268.167 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8771
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.559..28.559 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.784 ms
 Execution time: 1222.772 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2250.957..2250.957 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2250.859..2250.913 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2250.836..2261.983 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2222.943..2222.978 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=2195.304..2199.646 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3300kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.499..2160.040 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.920..2106.413 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.770..1411.169 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.248..47.402 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.038..30.888 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.140..0.140 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.123..0.129 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.035..0.038 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.063..0.135 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.037..0.042 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.281..7.281 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.029..4.619 rows=10000 loops=3)
 Planning time: 7.015 ms
 Execution time: 2262.838 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1224.153..1224.153 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1223.186..1231.294 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1217.581..1217.582 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=253.233..1143.694 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14414 lossy=11097
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=248.064..248.064 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.638 ms
 Execution time: 1231.546 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=8670.592..8670.592 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=8670.553..8678.123 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=8436.107..8436.108 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=8413.993..8418.866 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6127.049..8384.186 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.746..8214.804 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.245..2428.345 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.146..49.179 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.031..28.459 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.055..0.055 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.037..0.041 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.014..0.127 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.029..0.030 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.621..6.621 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.112..5.342 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..3.106 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.031..0.031 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.014 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.293 ms
 Execution time: 8678.706 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7484.616..7484.623 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7469.177..7495.187 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7462.552..7477.857 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7447.200..7449.248 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3152kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=118.445..7419.173 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=118.314..7390.382 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=118.252..7298.622 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=117.955..7233.588 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=117.828..5639.495 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=117.742..1421.071 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.034..798.650 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=117.655..117.655 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.063..116.514 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.118..0.118 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.096..0.102 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.049..0.050 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.060..0.060 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.039 rows=25 loops=3)
 Planning time: 8.267 ms
 Execution time: 7496.110 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=8846.913..9875.335 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=8753.233..9875.390 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=8063.945..9152.357 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=8017.665..8337.535 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 66632kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=5.799..7013.881 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=5.700..3254.781 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=5.564..320.529 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=5.422..290.124 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=5.333..88.709 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.202..30.835 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.083..6.546 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.065..0.065 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.039 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.873 ms
 Execution time: 9891.489 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3369.681..3385.525 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2967.823..3306.488 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2967.804..3218.291 rows=60563 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2958.644..3126.228 rows=20188 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2958.621..3006.590 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27640kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1217.523..2782.339 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1217.404..2737.863 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=981.392..2382.415 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.056..1087.654 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=978.926..978.926 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.741..913.859 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=22.354..22.354 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=235.103..235.103 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.029..129.196 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.065..0.065 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.041 rows=25 loops=3)
 Planning time: 4.534 ms
 Execution time: 3396.496 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=931.513..931.515 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=212.563..212.563 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.326..145.857 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.309..2.540 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.026 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.281..2.204 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.241..0.241 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.066 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=803.925..931.417 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=586.227..606.323 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.387..465.374 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.329..6.023 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.037..0.043 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.278..5.510 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.250..0.250 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.235 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.556 ms
 Execution time: 933.148 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1638.261..1638.263 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1628.260..1646.587 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1622.197..1631.968 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1621.057..1622.767 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2831kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.243..1600.469 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.174..1192.148 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.527 ms
 Execution time: 1647.200 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=878.768..878.768 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=164.861..826.450 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.894..617.707 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.617..12.617 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=146.902..146.902 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.043..82.169 rows=200000 loops=1)
 Planning time: 2.643 ms
 Execution time: 879.119 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2058.433..2059.694 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1661.405..1991.680 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1661.382..1816.306 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=128.592..678.757 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.465..398.939 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.243..6.422 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=121.588..121.588 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.033..106.573 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.865 ms
 Execution time: 2064.268 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=10416.417..10416.417 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10294.112..10416.340 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10294.103..10431.036 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=10035.928..10116.762 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=9912.322..9994.667 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external sort  Disk: 16440kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=9185.597..9655.345 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=9185.497..9319.597 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=149.726..664.081 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.039..228.150 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=148.153..148.153 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.027..100.569 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8493.196..8493.196 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=612.661..8492.970 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.048..6401.872 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.088..145.536 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.196 ms
 Execution time: 10435.368 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=4999.942..4999.942 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=4999.925..5000.085 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=4219.086..4219.086 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=723.530..4219.033 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.377..34.418 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=63.370..63.392 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=106973 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.768..1.768 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.506 ms
 Execution time: 5000.504 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4281.069..4281.157 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4281.003..4281.004 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4280.764..4288.916 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4275.135..4275.158 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.044..1148.168 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.056 ms
 Execution time: 4289.552 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7526.511..7526.619 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7497.159..7516.056 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7497.082..7514.783 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7497.029..7498.439 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=3.639..7454.965 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=3.158..3.390 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=3.907..30.443 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=257.603..371.817 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.030..0.034 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.801 ms
 Execution time: 7527.320 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=4891.006..4891.124 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=4874.848..4883.043 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=4874.837..4877.333 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.018..4738.280 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.413..2334.059 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.648..3776.123 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.608..2773.362 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.552..1382.716 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.040..1129.133 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.417..2.417 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.258..1.751 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.217..1.391 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.182..0.182 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.005..0.005 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.290 ms
 Execution time: 4892.206 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1224.892..1227.897 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1102.951..1204.426 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1102.938..1165.342 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1096.499..1125.409 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1096.479..1098.470 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2862kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=120.787..1076.009 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=120.587..386.716 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.042..219.471 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=119.951..119.951 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.033..110.288 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.026..0.026 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.259 ms
 Execution time: 1230.168 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1209.062..1218.608 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1206.621..1224.485 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1199.917..1209.488 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1197.473..1201.219 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3895kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.742..1156.766 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.658..267.749 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8738
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.281..28.281 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.792 ms
 Execution time: 1225.147 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2069.762..2069.762 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2069.670..2069.718 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2069.645..2077.816 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2041.845..2041.881 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=2014.211..2018.538 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3183kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.326..1981.167 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.848..1928.450 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.714..1285.592 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.244..44.669 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.034..28.460 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.143..0.143 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.126..0.132 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.033..0.035 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.054..0.054 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.033..0.035 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.057..0.123 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.034..0.039 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.188..7.188 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.027..4.498 rows=10000 loops=3)
 Planning time: 7.015 ms
 Execution time: 2078.673 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1220.282..1220.282 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1219.393..1227.697 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1213.734..1213.735 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=249.803..1139.769 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14604 lossy=11158
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=244.639..244.639 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.691 ms
 Execution time: 1227.944 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=8814.202..8814.202 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=8814.162..8821.970 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=8584.695..8584.695 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=8562.659..8567.508 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6239.296..8532.955 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.765..8362.358 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.243..2472.653 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.146..49.404 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.032..28.783 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.055..0.055 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.037..0.041 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.014..0.129 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.030..0.031 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.654..6.654 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.105..5.384 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.027..3.128 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.030 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.014 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.329 ms
 Execution time: 8822.544 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7510.367..7510.373 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7494.967..7518.051 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7488.165..7503.323 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7473.011..7475.046 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3143kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=117.603..7445.093 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=117.473..7416.071 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=117.418..7325.577 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=117.123..7260.878 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=117.016..5653.396 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=116.941..1417.741 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.034..797.523 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=116.859..116.859 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.096..115.713 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.111..0.111 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.089..0.095 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.043..0.043 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.059..0.059 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.033..0.038 rows=25 loops=3)
 Planning time: 8.203 ms
 Execution time: 7518.986 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=8886.720..9913.543 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=8858.226..9913.604 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=8513.372..9591.190 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=8467.441..8773.325 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 61920kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=14.075..7455.955 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=13.971..3491.586 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=3.855..337.850 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=3.698..307.506 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=3.625..92.335 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=3.486..31.498 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.095..6.998 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.068..0.068 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.042 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.005..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.856 ms
 Execution time: 9927.282 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3417.435..3433.240 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2962.320..3347.738 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2962.301..3259.813 rows=60611 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2954.354..3121.387 rows=20204 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2954.330..3002.435 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27416kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1212.864..2778.238 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1212.754..2734.003 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=970.602..2372.956 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.054..1090.654 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=968.141..968.142 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.984..913.035 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=22.615..22.615 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=241.306..241.306 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.028..132.401 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.065..0.065 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.038..0.043 rows=25 loops=3)
 Planning time: 4.519 ms
 Execution time: 3443.720 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=925.058..925.059 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=212.344..212.344 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.312..145.631 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.297..2.470 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.025 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.268..2.131 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.232..0.232 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.065 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=797.751..924.962 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=580.250..600.425 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.384..460.449 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.327..5.993 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.035..0.040 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.277..5.471 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.251..0.251 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.233 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.593 ms
 Execution time: 926.877 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1638.944..1638.946 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1629.065..1647.974 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1622.979..1632.697 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1621.820..1623.535 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2822kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.218..1601.200 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.144..1192.806 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.590 ms
 Execution time: 1648.599 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=863.050..863.050 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=161.564..810.751 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.943..605.641 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.650..12.650 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=143.526..143.526 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.044..78.268 rows=200000 loops=1)
 Planning time: 2.674 ms
 Execution time: 863.647 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2063.726..2064.989 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1667.376..1996.919 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1667.356..1822.474 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=132.825..683.768 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.606..399.311 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.249..6.563 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=125.670..125.670 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.033..110.572 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.843 ms
 Execution time: 2069.542 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=10881.492..10881.493 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10621.953..10881.424 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10621.944..10899.911 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=10021.146..10107.631 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=9897.740..9986.970 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external sort  Disk: 16440kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=8949.018..9631.925 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=8948.912..9303.472 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=148.171..660.794 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.042..226.146 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=146.670..146.670 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.028..99.333 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8479.587..8479.587 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=609.693..8479.400 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.042..6394.617 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.088..141.373 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.094 ms
 Execution time: 10903.931 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=5082.481..5082.481 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=4230.701..5089.936 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=4308.986..4308.986 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=26.871..4308.938 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.232..34.325 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=64.734..64.756 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=106039 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.764..1.764 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.517 ms
 Execution time: 5090.353 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4281.965..4282.070 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4281.900..4281.903 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4281.681..4289.731 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4275.896..4275.919 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.040..1148.743 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.069 ms
 Execution time: 4290.379 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7529.717..7529.824 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7500.422..7519.269 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7500.345..7517.992 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7500.294..7501.669 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=3.793..7458.321 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=3.319..3.533 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=2.196..29.421 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=255.912..371.976 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.034 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.730 ms
 Execution time: 7530.484 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=4929.268..4929.386 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=4913.210..4921.315 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=4913.198..4915.665 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.159..4777.959 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.559..2344.757 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.702..3806.126 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.662..2779.358 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.597..1376.682 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.037..1123.322 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.466..2.466 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.269..1.776 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.229..1.407 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.179..0.179 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.005..0.005 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.287 ms
 Execution time: 4930.435 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1220.259..1223.300 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1100.525..1199.635 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1100.486..1160.587 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1093.863..1122.835 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1093.843..1095.865 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2856kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=120.102..1073.102 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=119.917..384.687 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.043..218.034 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=119.265..119.265 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.037..109.606 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.026..0.026 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.295 ms
 Execution time: 1225.681 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1353.337..1362.449 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1350.807..1371.257 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1344.011..1353.621 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1341.573..1345.344 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3938kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.339..1300.667 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.239..295.343 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8858
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.183..28.183 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.017..0.017 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.791 ms
 Execution time: 1372.043 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2073.000..2073.000 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2072.922..2072.956 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2072.905..2073.076 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2044.799..2044.833 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=2017.266..2021.630 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: external sort  Disk: 2840kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.306..1984.758 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.862..1931.726 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.726..1288.705 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.244..45.041 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.033..28.698 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.135..0.135 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.119..0.125 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.032..0.035 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.026..0.028 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.057..0.123 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.034..0.039 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.144..7.144 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.027..4.447 rows=10000 loops=3)
 Planning time: 7.051 ms
 Execution time: 2074.210 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1227.827..1227.827 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1226.724..1235.219 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1221.108..1221.108 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=253.207..1146.719 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14416 lossy=11124
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=247.966..247.966 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.663 ms
 Execution time: 1235.465 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=9478.886..9478.886 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=9478.847..9479.013 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=9326.035..9326.035 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=9304.229..9309.132 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6747.289..9274.418 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.838..9102.149 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.261..2701.489 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.160..52.927 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..31.506 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.056..0.056 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.037..0.042 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.016..0.141 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.032..0.033 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.809..6.809 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.111..5.537 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..3.272 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.031 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.015 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.340 ms
 Execution time: 9479.594 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7500.093..7500.100 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7484.502..7507.595 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7477.513..7492.740 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7462.356..7464.436 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3144kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=118.475..7434.369 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=118.352..7405.411 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=118.291..7313.902 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=118.004..7249.290 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=117.903..5649.149 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=117.832..1421.774 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.033..799.490 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=117.746..117.746 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.115..116.603 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.111..0.111 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.088..0.095 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.042..0.042 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.029..0.030 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.059..0.059 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
 Planning time: 8.244 ms
 Execution time: 7508.547 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=9375.546..10944.042 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=9273.021..10944.074 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=7849.865..8928.630 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=7804.226..8115.034 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 67768kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=6.140..6802.338 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=6.043..3167.751 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=5.917..312.013 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=5.759..282.047 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=5.668..87.075 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.542..30.384 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.083..6.381 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.065..0.065 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.037 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.877 ms
 Execution time: 10960.008 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3288.326..3304.112 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2831.327..3219.031 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2831.300..3130.911 rows=60598 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2823.927..2992.007 rows=20199 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2823.907..2872.846 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27288kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1099.856..2634.400 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1099.750..2590.253 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=873.827..2245.727 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.052..1030.864 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=871.351..871.351 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.060..816.344 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=21.700..21.700 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=225.063..225.063 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.028..120.467 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.061..0.061 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
 Planning time: 4.498 ms
 Execution time: 3314.008 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=930.912..930.914 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=216.511..216.511 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.312..150.579 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.296..2.540 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.025 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.268..2.206 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.230..0.230 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.068 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=803.617..930.819 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=581.985..602.127 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.374..462.941 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.317..5.976 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.038 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.270..5.467 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.244..0.244 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.234 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.524 ms
 Execution time: 932.504 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1625.062..1625.064 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1615.121..1632.597 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1608.988..1618.720 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1607.826..1609.543 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2846kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.212..1587.403 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.127..1183.677 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.539 ms
 Execution time: 1633.224 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=871.253..871.254 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=164.693..818.915 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.868..610.574 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.592..12.592 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=146.746..146.746 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.043..81.618 rows=200000 loops=1)
 Planning time: 2.685 ms
 Execution time: 871.607 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2063.250..2064.500 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1666.390..1996.395 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1666.365..1821.943 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=128.622..676.699 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.474..396.405 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.244..6.430 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=121.582..121.582 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.034..106.633 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.838 ms
 Execution time: 2069.152 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=10374.790..10374.790 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10254.920..10374.722 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10254.911..10390.034 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=10013.688..10093.869 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=9888.241..9974.149 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external sort  Disk: 16440kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=9173.071..9639.678 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=9172.974..9304.930 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=148.430..661.712 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.041..227.091 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=146.972..146.972 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.026..99.813 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8481.112..8481.112 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=610.387..8480.895 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.043..6393.499 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.085..145.124 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.052 ms
 Execution time: 10394.078 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              

 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=4893.979..4893.979 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=4694.017..4900.997 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=4235.303..4235.303 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=967.767..4235.246 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.379..35.005 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=63.606..63.628 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=110770 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.760..1.760 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.498 ms
 Execution time: 4901.436 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4264.613..4264.700 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4264.531..4264.533 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4264.245..4272.331 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4258.501..4258.525 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.044..1139.842 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.109 ms
 Execution time: 4272.984 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7530.293..7530.399 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7500.984..7519.869 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7500.906..7518.578 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7500.854..7502.307 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=4.739..7458.784 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=4.179..4.398 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=3.922..29.375 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=256.093..371.954 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.035 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.793 ms
 Execution time: 7531.077 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=4872.290..4872.408 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=4856.092..4864.242 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=4856.081..4858.558 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.461..4719.672 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.845..2336.064 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=3.072..3764.372 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=3.028..2767.170 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.976..1379.486 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.037..1126.959 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.824..2.825 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.260..2.130 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.030 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.220..1.753 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.184..0.184 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.005..0.005 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.287 ms
 Execution time: 4873.530 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1221.284..1224.318 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1100.335..1200.896 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1100.297..1161.864 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1093.840..1122.763 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1093.820..1095.812 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2884kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=121.716..1073.141 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=121.529..386.118 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.043..217.746 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=120.884..120.884 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.039..111.275 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.026..0.026 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.229 ms
 Execution time: 1226.655 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1208.661..1218.237 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1206.258..1224.067 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1200.234..1209.847 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1197.801..1201.566 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3879kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.825..1157.299 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.738..268.480 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8652
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.397..28.397 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.750 ms
 Execution time: 1224.821 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2034.750..2034.750 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2034.651..2034.706 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2034.628..2042.697 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2006.988..2007.023 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=1979.304..1983.629 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3153kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.171..1946.688 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.846..1894.611 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.709..1262.919 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.256..44.249 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.032..28.072 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.142..0.142 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.126..0.132 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.033..0.036 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.052..0.052 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.032..0.034 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.056..0.120 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.033..0.038 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.035..7.035 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.027..4.378 rows=10000 loops=3)
 Planning time: 7.017 ms
 Execution time: 2043.544 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1220.337..1220.337 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1219.297..1227.703 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1213.747..1213.747 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=249.224..1139.420 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14562 lossy=11175
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=243.925..243.925 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.641 ms
 Execution time: 1227.990 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=8831.672..8831.672 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=8831.631..8839.449 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=8605.005..8605.005 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=8582.869..8587.843 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6254.630..8553.004 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.763..8383.098 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.259..2479.655 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.157..49.560 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.035..28.939 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.055..0.055 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.037..0.042 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.014..0.129 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.030..0.031 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.604..6.604 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.111..5.326 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..3.101 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.030 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.015 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.293 ms
 Execution time: 8840.032 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7477.655..7477.661 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7462.316..7488.311 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7455.438..7470.688 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7440.089..7442.136 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3145kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=118.628..7412.017 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=118.491..7382.973 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=118.438..7292.653 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=118.104..7227.250 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=118.005..5638.427 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=117.934..1429.298 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.034..802.294 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=117.851..117.851 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.093..116.687 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.004..0.004 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.118..0.118 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.095..0.102 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.042..0.043 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.060..0.060 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
 Planning time: 8.215 ms
 Execution time: 7489.285 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=8850.435..10413.827 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=8756.012..10413.865 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=7884.773..8957.321 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=7839.128..8148.730 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 72520kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=10.427..6832.525 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=10.337..3197.346 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=4.352..307.170 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=4.200..277.023 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=4.115..86.684 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=3.989..30.456 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.085..6.318 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.066..0.066 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.036..0.041 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.038 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.808 ms
 Execution time: 10430.912 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3250.148..3265.956 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2804.482..3185.472 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2804.472..3097.434 rows=60505 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2797.184..2963.450 rows=20168 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2797.163..2844.746 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27376kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1099.548..2621.799 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1099.438..2577.339 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=872.498..2232.160 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.034..1047.416 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=870.143..870.143 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.144..815.303 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=21.772..21.772 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=226.010..226.010 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.032..121.281 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.059..0.059 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.032..0.037 rows=25 loops=3)
 Planning time: 4.412 ms
 Execution time: 3275.666 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=918.356..918.357 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=212.803..212.803 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.305..146.419 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.289..2.496 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.021..0.026 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.261..2.151 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.222..0.222 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.066 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=791.190..918.265 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=573.239..593.373 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.366..453.170 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.319..5.799 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.034..0.040 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.277..5.279 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.241..0.241 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.229 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.411 ms
 Execution time: 919.999 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1642.389..1642.391 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1632.530..1650.975 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1626.493..1636.247 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1625.349..1627.086 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2824kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.164..1604.832 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.098..1197.439 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.534 ms
 Execution time: 1651.655 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=858.992..858.992 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=161.160..807.046 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.855..602.051 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.567..12.567 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=143.223..143.223 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.040..78.235 rows=200000 loops=1)
 Planning time: 2.710 ms
 Execution time: 859.593 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2067.064..2068.329 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1669.623..2000.130 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1669.599..1825.283 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=131.975..683.619 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.498..399.172 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.249..6.455 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=124.912..124.913 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.032..109.685 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.822 ms
 Execution time: 2073.077 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=10871.349..10871.349 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10630.408..10871.268 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10630.399..10871.395 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=10058.630..10138.916 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=9934.688..10016.605 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external merge  Disk: 32936kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=9163.395..9677.170 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=9163.297..9345.313 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=150.328..664.846 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.042..226.811 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=148.798..148.798 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.028..101.227 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8516.918..8516.919 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=613.422..8516.721 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.058..6419.193 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.082..143.270 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.097 ms
 Execution time: 10879.549 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=4867.558..4867.559 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=4649.454..4874.513 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=4261.741..4261.741 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=1858.153..4261.684 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.817..35.193 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=64.005..64.026 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=110124 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.752..1.752 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.474 ms
 Execution time: 4874.928 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4276.404..4276.490 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4276.320..4276.323 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4275.994..4283.874 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4269.631..4269.655 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.044..1138.840 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.061 ms
 Execution time: 4284.516 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7538.776..7538.884 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7509.517..7528.349 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7509.438..7527.070 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7509.385..7510.795 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=4.545..7467.295 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=4.052..4.298 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=3.087..30.329 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=258.236..372.387 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.035 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.871 ms
 Execution time: 7539.604 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=4855.076..4855.195 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=4838.944..4847.029 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=4838.935..4841.396 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.099..4705.039 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.479..2330.322 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.648..3753.137 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.608..2740.985 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.560..1375.370 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.038..1122.999 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.422..2.422 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.261..1.741 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.220..1.385 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.179..0.179 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.005..0.005 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.206 ms
 Execution time: 4856.294 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1134.170..1137.205 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1017.879..1113.694 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1017.865..1074.673 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1011.723..1040.632 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1011.704..1013.689 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2852kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=115.767..991.197 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=115.641..372.340 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.038..210.509 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=115.009..115.009 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.029..105.233 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.023..0.024 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.333 ms
 Execution time: 1139.505 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1205.953..1214.178 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1203.482..1220.135 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1196.783..1206.364 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1194.355..1198.116 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3887kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.662..1153.937 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.582..267.763 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8657
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.244..28.244 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.771 ms
 Execution time: 1220.842 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2031.330..2031.330 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2031.256..2031.286 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2031.236..2031.406 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2003.247..2003.281 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=1975.661..1980.004 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: external sort  Disk: 2840kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.160..1943.510 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.841..1891.560 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.711..1260.862 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.241..44.193 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.032..28.062 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.141..0.141 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.125..0.130 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.040..0.042 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.025..0.027 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.056..0.120 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.033..0.038 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.027..7.028 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.026..4.356 rows=10000 loops=3)
 Planning time: 7.045 ms
 Execution time: 2032.624 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1219.879..1219.879 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1219.015..1226.995 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1213.423..1213.423 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=250.631..1139.360 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14199 lossy=11186
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=245.448..245.448 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.617 ms
 Execution time: 1227.262 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=8782.184..8782.184 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=8782.171..8789.082 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=8641.913..8641.913 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=8619.508..8624.648 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external sort  Disk: 6464kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6249.771..8589.816 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.740..8413.656 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.241..2490.925 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.147..50.563 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.032..29.308 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.055..0.055 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.037..0.042 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.014..0.130 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.030..0.031 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.651..6.651 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.112..5.380 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.034..3.147 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.030 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.014 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.297 ms
 Execution time: 8791.224 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7466.309..7466.316 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7451.065..7474.151 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7444.118..7459.231 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7429.022..7431.079 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3137kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=118.059..7400.775 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=117.920..7371.126 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=117.865..7278.969 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=117.340..7213.237 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=117.230..5630.961 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=117.154..1423.787 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.033..794.671 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=117.072..117.072 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.071..115.927 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.004..0.004 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.117..0.118 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.095..0.102 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.049..0.049 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.036..0.037 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.060..0.060 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
 Planning time: 8.373 ms
 Execution time: 7475.158 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=9223.603..10458.111 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=9144.229..10480.951 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=7727.526..8799.275 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=7681.127..7986.936 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 52392kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=22.870..6689.435 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=22.788..3123.715 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=5.917..307.777 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=5.777..277.842 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=5.688..85.714 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.560..30.434 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.079..6.175 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.067..0.067 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.038..0.042 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.037 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.807 ms
 Execution time: 10493.008 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3237.341..3253.279 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2783.710..3167.859 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2783.699..3080.211 rows=60546 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2773.770..2940.455 rows=20182 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2773.748..2821.362 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27504kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1088.374..2597.857 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1088.262..2553.615 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=863.345..2210.242 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.046..1033.575 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=860.991..860.991 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=25.887..805.952 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=21.519..21.520 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=224.074..224.074 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.028..119.447 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.061..0.061 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
 Planning time: 4.388 ms
 Execution time: 3264.046 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=935.399..935.401 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=217.610..217.610 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.310..151.245 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.295..2.581 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.018..0.023 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.268..2.250 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.232..0.232 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.069 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=808.268..935.307 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=585.534..605.634 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.392..465.688 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.336..6.087 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.047..0.051 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.274..5.508 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.248..0.248 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.235 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.456 ms
 Execution time: 936.962 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1631.592..1631.594 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1621.757..1639.269 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1615.747..1625.437 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1614.587..1616.317 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2835kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.322..1594.194 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.247..1189.994 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.542 ms
 Execution time: 1639.935 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=870.349..870.349 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=164.192..818.015 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.836..610.058 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.553..12.553 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=146.282..146.282 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.041..81.340 rows=200000 loops=1)
 Planning time: 2.752 ms
 Execution time: 870.697 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2057.580..2058.839 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1660.421..1990.785 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1660.398..1816.150 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=128.714..677.796 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.381..397.647 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.241..6.336 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=121.790..121.790 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.055..106.852 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.851 ms
 Execution time: 2063.774 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=10409.853..10409.854 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10289.778..10409.775 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10289.770..10424.742 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=10051.540..10131.520 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=9926.266..10012.055 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external sort  Disk: 16440kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=9214.207..9678.125 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=9214.108..9345.909 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=149.808..661.980 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.042..226.297 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=148.311..148.311 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.028..100.811 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8521.422..8521.422 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=612.446..8521.209 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.050..6428.051 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.085..143.700 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.109 ms
 Execution time: 10428.932 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=4905.014..4905.014 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=3093.319..4912.321 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=4238.332..4238.332 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=1581.952..4238.279 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.457..35.095 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=63.649..63.675 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=63833 lossy=33035
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.783..1.783 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.515 ms
 Execution time: 4912.737 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4281.085..4281.184 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4281.022..4281.024 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4280.786..4288.955 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4275.040..4275.063 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.044..1145.004 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.086 ms
 Execution time: 4289.607 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7547.634..7547.742 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7518.230..7537.143 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7518.149..7535.850 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7518.097..7519.482 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=4.454..7475.819 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=3.960..4.174 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.963..29.610 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=258.467..372.815 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.037 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.795 ms
 Execution time: 7548.410 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=4877.184..4877.303 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=4860.909..4869.129 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=4860.898..4863.400 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.039..4724.750 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.447..2322.935 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.705..3763.593 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.665..2763.664 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.598..1378.931 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.042..1125.995 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.455..2.455 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.258..1.777 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.027..0.030 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.217..1.407 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.181..0.181 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.005..0.005 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.303 ms
 Execution time: 4878.444 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1144.221..1147.250 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1019.074..1123.725 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1019.059..1084.583 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1012.530..1041.536 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1012.512..1014.498 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2841kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=116.904..992.055 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=116.741..372.948 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.041..209.956 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=116.084..116.084 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.030..106.387 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.023..0.024 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.249 ms
 Execution time: 1149.539 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1211.812..1220.608 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1209.348..1226.545 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1202.951..1212.567 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1200.517..1204.262 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3889kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.833..1159.905 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.739..270.100 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8667
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.398..28.398 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.721 ms
 Execution time: 1227.212 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2070.553..2070.554 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2070.462..2070.511 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2070.439..2078.737 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2042.802..2042.838 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=2015.140..2019.455 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3198kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.245..1982.667 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.855..1929.943 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.730..1285.638 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.235..44.725 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.032..28.436 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.135..0.135 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.118..0.124 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.033..0.035 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.044..0.045 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.025..0.026 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.057..0.123 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.034..0.039 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.093..7.093 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.027..4.438 rows=10000 loops=3)
 Planning time: 7.042 ms
 Execution time: 2079.577 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1224.391..1224.391 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1223.330..1231.781 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1217.695..1217.695 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=251.873..1143.559 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14372 lossy=11135
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=246.692..246.692 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.668 ms
 Execution time: 1232.030 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=9585.730..9585.730 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=9585.722..9585.878 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=9343.856..9343.856 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=9321.898..9326.838 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external sort  Disk: 6464kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6667.885..9292.031 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.870..9117.165 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.273..2705.426 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.160..53.206 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..31.575 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.055..0.055 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.037..0.042 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.016..0.142 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.032..0.033 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.904..6.904 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.106..5.627 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.028..3.367 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.031 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.014 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.350 ms
 Execution time: 9587.983 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7489.502..7489.508 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7474.361..7500.664 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7467.454..7482.672 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7452.152..7454.186 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3143kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=118.514..7424.192 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=118.385..7395.397 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=118.333..7304.486 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=117.964..7239.540 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=117.866..5649.483 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=117.792..1427.845 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.034..802.335 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=117.709..117.709 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.095..116.549 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.110..0.110 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.088..0.095 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.042..0.042 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.059..0.059 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.033..0.038 rows=25 loops=3)
 Planning time: 8.226 ms
 Execution time: 7501.601 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=9795.782..11389.245 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=9762.073..11389.268 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=8608.326..9688.616 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=8562.229..8875.806 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 54776kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=6.239..7567.830 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=6.130..3582.091 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=5.970..322.187 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=5.816..292.096 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=5.728..88.351 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.591..30.729 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.082..6.512 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.068..0.068 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.044 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.819 ms
 Execution time: 11402.681 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3189.295..3205.198 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2795.142..3126.490 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2795.101..3038.730 rows=60650 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2788.395..2955.768 rows=20217 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2788.374..2836.513 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27560kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1100.410..2613.038 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1100.306..2568.382 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=873.771..2223.422 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.058..1037.049 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=871.346..871.346 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.162..816.359 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=21.795..21.795 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=225.669..225.669 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.027..120.893 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.059..0.059 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.033..0.038 rows=25 loops=3)
 Planning time: 4.419 ms
 Execution time: 3214.827 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=926.701..926.703 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=212.839..212.839 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.310..145.859 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.295..2.485 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.025 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.267..2.149 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.230..0.230 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.066 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=799.494..926.605 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=581.520..601.620 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.385..459.981 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.328..5.885 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.034..0.040 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.279..5.372 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.251..0.251 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.232 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.503 ms
 Execution time: 928.460 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1627.813..1627.815 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1617.930..1635.332 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1611.872..1621.658 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1610.704..1612.410 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2830kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.196..1590.075 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.128..1187.801 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.593 ms
 Execution time: 1635.977 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=858.698..858.698 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=160.708..806.562 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.831..602.457 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.538..12.538 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=142.797..142.797 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.041..78.225 rows=200000 loops=1)
 Planning time: 2.694 ms
 Execution time: 859.269 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2061.488..2062.738 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1665.410..1994.752 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1665.389..1820.734 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=132.403..683.665 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.660..399.814 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.249..6.616 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=125.195..125.195 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.031..110.200 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.819 ms
 Execution time: 2067.200 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=11139.511..11139.512 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10899.152..11139.428 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10899.143..11139.552 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=10325.556..10405.647 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=10202.114..10283.778 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external merge  Disk: 32936kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=9431.923..9944.922 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=9431.823..9612.787 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=149.571..662.513 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.041..226.554 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=148.047..148.047 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.033..100.402 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8787.429..8787.429 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=627.687..8787.217 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.055..6689.412 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.084..143.475 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.081 ms
 Execution time: 11147.977 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=5834.869..5834.869 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=5833.802..5841.365 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=4927.719..4927.719 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=4.318..4927.666 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=1.232..35.131 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=74.093..74.117 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=104434 lossy=66070
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.770..1.770 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.498 ms
 Execution time: 5841.769 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4262.311..4262.397 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4262.247..4262.249 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4262.024..4269.868 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4256.159..4256.181 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.038..1131.658 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.116 ms
 Execution time: 4270.509 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7699.823..7699.929 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7670.403..7689.394 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7670.324..7688.112 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7670.269..7671.659 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=4.451..7627.657 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=3.942..4.150 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=4.184..29.282 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=264.699..380.395 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.035 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.820 ms
 Execution time: 7700.598 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=5474.424..5474.545 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=5458.104..5466.363 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=5458.092..5460.623 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.272..5318.591 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.674..2690.990 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=3.094..4258.947 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=3.039..3099.932 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.941..1455.301 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.041..1198.686 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.778..2.778 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.274..2.094 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.233..1.721 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.195..0.195 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.007..0.007 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.260 ms
 Execution time: 5475.573 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1124.313..1127.347 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1007.236..1103.832 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1007.222..1064.792 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1000.799..1029.705 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1000.778..1002.784 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2809kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=118.848..980.444 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=118.632..372.011 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.039..207.871 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=117.955..117.955 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.031..108.188 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.023..0.023 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.365 ms
 Execution time: 1129.723 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1207.067..1215.471 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1204.659..1221.605 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1197.685..1207.264 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1195.255..1199.015 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3869kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.606..1154.719 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.522..267.412 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8601
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.318..28.318 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.769 ms
 Execution time: 1222.258 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2038.767..2038.768 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2038.671..2038.723 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2038.634..2046.746 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2010.698..2010.739 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=1983.195..1987.531 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3202kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.154..1950.351 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.840..1898.146 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.708..1265.759 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.240..44.454 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.032..28.118 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.141..0.141 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.124..0.130 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.033..0.035 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.051..0.051 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.031..0.033 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.056..0.121 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.033..0.038 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.024..7.024 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.026..4.370 rows=10000 loops=3)
 Planning time: 7.017 ms
 Execution time: 2047.642 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1222.945..1222.945 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1221.934..1230.075 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1216.333..1216.333 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=252.093..1142.545 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14143 lossy=11182
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=246.888..246.888 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.644 ms
 Execution time: 1230.316 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=9420.461..9420.461 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=9420.419..9432.345 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=9167.576..9167.576 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=9145.547..9150.454 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6538.688..9115.435 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.827..8944.086 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.253..2653.607 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.153..51.383 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.035..30.668 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.057..0.057 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.039..0.043 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.015..0.139 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.032..0.033 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.817..6.817 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.114..5.549 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.036..3.289 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.030 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.014 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.374 ms
 Execution time: 9432.926 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7430.438..7430.446 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7415.057..7438.182 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7408.072..7423.296 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7392.785..7394.837 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3137kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=117.691..7364.717 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=117.547..7335.826 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=117.488..7244.592 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=117.115..7179.538 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=117.004..5608.359 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=116.932..1416.781 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.032..790.499 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=116.852..116.852 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.048..115.708 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.004..0.004 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.110..0.110 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.088..0.094 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.042..0.042 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.030..0.030 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.058..0.059 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.033..0.038 rows=25 loops=3)
 Planning time: 8.246 ms
 Execution time: 7439.228 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=9072.165..10188.235 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=9038.861..10188.283 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=8447.036..9522.917 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=8401.239..8713.018 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 66664kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=4.396..7397.001 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=4.304..3491.912 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=3.947..329.733 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=3.780..299.177 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=3.673..90.715 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=3.544..30.743 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.093..6.843 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.068..0.068 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.038..0.043 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.797 ms
 Execution time: 10203.907 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3230.505..3246.198 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2786.850..3161.231 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2786.841..3073.731 rows=60418 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2779.307..2946.211 rows=20139 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2779.286..2827.412 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27312kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1095.482..2604.447 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1095.380..2560.355 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=869.211..2215.802 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.045..1035.488 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=866.802..866.802 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.148..812.086 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=21.784..21.784 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=225.305..225.305 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.033..120.249 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.059..0.059 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.032..0.037 rows=25 loops=3)
 Planning time: 4.475 ms
 Execution time: 3256.986 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=920.106..920.107 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=212.473..212.474 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.304..145.763 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.288..2.476 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.025 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.261..2.139 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.222..0.222 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.066 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=792.845..920.010 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=575.218..595.359 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.381..455.036 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.326..5.821 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.036..0.042 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.275..5.311 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.247..0.247 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.229 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.574 ms
 Execution time: 921.904 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1643.937..1643.939 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1634.048..1651.827 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1627.766..1637.491 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1626.619..1628.332 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2829kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.216..1606.123 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.155..1197.944 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.529 ms
 Execution time: 1652.458 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=872.096..872.096 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=161.508..819.684 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.931..604.813 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.648..12.648 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=143.491..143.491 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.041..78.488 rows=200000 loops=1)
 Planning time: 2.714 ms
 Execution time: 872.456 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2066.379..2067.659 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1669.230..1999.527 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1669.207..1824.933 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=131.885..685.627 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.529..401.015 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.249..6.486 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=124.793..124.793 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.037..109.765 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.865 ms
 Execution time: 2072.136 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=11883.755..11883.755 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=11763.627..11883.684 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=11643.308..11883.803 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=11216.279..11296.398 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=11095.116..11173.211 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external sort  Disk: 49320kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=10125.355..10828.460 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=10125.238..10479.476 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=157.536..679.479 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.046..235.196 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=156.011..156.011 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.030..108.105 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=9636.961..9636.961 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=616.748..9636.715 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.051..7532.709 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.097..153.194 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.114 ms
 Execution time: 11894.396 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              

 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=6320.743..6320.743 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=3503.560..6331.695 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=5374.496..5374.496 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=1052.827..5374.446 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.334..35.322 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=80.860..80.885 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=72947 lossy=33034
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.863..1.863 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.477 ms
 Execution time: 6332.138 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4269.671..4269.757 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4269.593..4269.595 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4269.269..4277.239 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4263.598..4263.621 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.041..1144.942 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.089 ms
 Execution time: 4277.891 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7644.019..7644.125 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7614.610..7633.636 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7614.529..7632.354 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7614.477..7615.894 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=4.459..7571.731 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=3.973..4.219 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=4.078..30.242 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=258.733..377.612 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.037 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.744 ms
 Execution time: 7644.817 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=4833.751..4833.870 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=4817.641..4825.799 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=4817.631..4820.095 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.332..4680.107 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.733..2309.717 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.960..3729.692 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.919..2722.630 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.820..1366.979 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.040..1115.597 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.677..2.677 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.263..1.982 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.031 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.222..1.609 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.180..0.181 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.005..0.005 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.291 ms
 Execution time: 4834.938 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1142.148..1145.219 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1022.607..1121.618 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1022.576..1082.512 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1016.370..1045.283 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1016.346..1018.343 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2799kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=116.374..995.824 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=116.208..373.526 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.039..211.173 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=115.572..115.572 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.037..105.840 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.023..0.024 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.302 ms
 Execution time: 1147.479 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1206.812..1216.256 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1204.369..1222.059 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1197.023..1206.580 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1194.585..1198.327 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3889kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.569..1153.371 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.489..267.410 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8656
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.286..28.286 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.732 ms
 Execution time: 1222.767 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2215.056..2215.057 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2214.965..2215.013 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2214.925..2225.552 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2186.123..2186.164 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=2158.384..2162.780 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3231kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.545..2125.487 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.895..2072.394 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.751..1389.489 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.246..46.824 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..30.569 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.140..0.140 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.123..0.129 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.036..0.038 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.062..0.133 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.036..0.041 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.358..7.358 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.030..4.692 rows=10000 loops=3)
 Planning time: 7.035 ms
 Execution time: 2226.454 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1223.426..1223.426 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1222.434..1230.813 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1216.836..1216.836 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=250.796..1142.460 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14293 lossy=11297
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=245.601..245.601 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.664 ms
 Execution time: 1231.059 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=9572.626..9572.626 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=9572.588..9585.092 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=9305.029..9305.029 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=9283.024..9287.871 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6637.536..9253.305 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.840..9079.793 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.266..2694.424 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.161..52.351 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..31.169 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.057..0.057 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.038..0.043 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.015..0.141 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.032..0.033 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.806..6.806 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.108..5.530 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.030..3.255 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.030 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.009..0.014 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.345 ms
 Execution time: 9585.668 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7481.661..7481.668 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7466.251..7489.860 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7459.475..7474.584 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7444.385..7446.423 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3139kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=119.220..7416.044 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=119.087..7386.991 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=119.026..7295.869 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=118.645..7230.695 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=118.543..5647.280 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=118.467..1432.271 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.035..803.421 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=118.374..118.374 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.071..117.225 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.004..0.004 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.118..0.118 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.095..0.102 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.049..0.049 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.061..0.061 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
 Planning time: 8.216 ms
 Execution time: 7490.838 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=9935.180..11076.777 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=9838.018..11076.822 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=8486.654..9575.750 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=8439.829..8761.824 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 52416kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=20.725..7429.519 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=20.607..3480.367 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=6.350..334.200 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=6.197..303.866 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=6.119..92.188 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.975..31.649 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.096..6.938 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.068..0.068 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.042 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.005..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.936 ms
 Execution time: 11090.092 ms
(33 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3180.613..3196.378 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2780.356..3113.635 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2780.344..3025.310 rows=60502 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2773.035..2940.520 rows=20167 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2773.015..2821.497 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27400kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1090.956..2598.524 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1090.843..2554.195 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=862.040..2207.031 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.055..1034.239 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=859.624..859.624 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.089..804.897 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=21.733..21.733 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=227.949..227.949 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.027..122.551 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.061..0.061 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
 Planning time: 4.423 ms
 Execution time: 3207.311 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=908.478..908.480 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=211.568..211.568 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.307..144.823 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.293..2.466 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.026 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.264..2.126 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.225..0.225 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.065 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=780.752..908.381 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=564.047..584.254 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.382..445.101 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.326..5.945 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.039 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.278..5.415 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.251..0.251 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.224 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.495 ms
 Execution time: 910.257 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1726.375..1726.377 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1716.249..1736.844 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1709.919..1719.692 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1708.773..1710.480 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2872kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.288..1688.211 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.211..1220.319 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.016..0.016 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.581 ms
 Execution time: 1737.460 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=875.725..875.725 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=164.805..823.563 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=17.150..615.621 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.847..12.847 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=146.580..146.580 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.046..81.508 rows=200000 loops=1)
 Planning time: 2.705 ms
 Execution time: 876.080 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2060.008..2061.277 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1662.951..1993.138 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1662.928..1818.714 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=128.811..679.172 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.407..398.070 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.243..6.363 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=121.854..121.854 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.036..106.907 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.840 ms
 Execution time: 2066.148 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=10353.377..10353.378 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=10231.886..10353.308 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=10231.877..10367.979 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=9973.631..10053.775 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=9850.514..9932.204 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external sort  Disk: 16440kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=9125.805..9593.464 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=9125.705..9257.979 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=148.189..659.693 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.046..225.958 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=146.704..146.705 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.028..99.593 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=8435.875..8435.875 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=604.368..8435.662 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.044..6348.299 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.087..145.426 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.093 ms
 Execution time: 10372.157 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=4914.220..4914.220 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=2905.455..4925.091 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=4064.732..4064.732 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=1566.689..4064.668 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=1.245..35.315 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=61.017..61.039 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=68795 lossy=33035
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.867..1.867 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.560 ms
 Execution time: 4925.510 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4280.903..4281.010 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4280.837..4280.838 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4280.611..4288.689 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4274.902..4274.933 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.038..1150.604 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.077 ms
 Execution time: 4289.347 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7539.793..7539.899 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7510.544..7529.367 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7510.467..7528.078 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7510.413..7511.811 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=1105.790..7468.255 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=4.607..4.847 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=4.060..29.434 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=258.603..372.405 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.030..0.034 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.790 ms
 Execution time: 7540.617 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=5480.246..5480.365 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=5464.044..5472.274 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=5464.033..5466.595 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.076..5329.595 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.459..2658.958 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.834..4250.288 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.795..3084.341 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.736..1462.002 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.045..1206.498 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.595..2.595 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.269..1.901 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.038..0.040 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.218..1.522 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.173..0.174 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.007..0.007 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.201 ms
 Execution time: 5481.448 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1215.959..1219.008 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1099.481..1195.419 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1099.467..1156.423 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1092.946..1121.900 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1092.925..1094.936 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2861kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=124.118..1072.461 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=123.923..387.374 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.050..217.276 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=123.273..123.273 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.031..113.559 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.026..0.026 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.387 ms
 Execution time: 1221.366 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1213.202..1221.958 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1210.757..1228.054 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1204.316..1213.896 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1201.885..1205.623 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3910kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.937..1161.042 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.846..268.744 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8699
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.518..28.518 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.787 ms
 Execution time: 1228.771 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2222.697..2222.697 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2222.622..2222.653 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2222.605..2222.775 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2193.353..2193.387 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=2165.588..2169.951 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: external sort  Disk: 2888kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.441..2132.664 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.864..2079.612 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.735..1393.341 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.246..46.953 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.037..30.653 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.139..0.139 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.122..0.128 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.034..0.036 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.026..0.028 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.062..0.133 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.036..0.042 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.267..7.267 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.029..4.580 rows=10000 loops=3)
 Planning time: 6.991 ms
 Execution time: 2224.020 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1223.012..1223.012 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1221.942..1230.229 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1216.299..1216.299 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=251.850..1142.333 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14227 lossy=11180
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=246.716..246.716 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.640 ms
 Execution time: 1230.471 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=8726.371..8726.371 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=8726.364..8726.522 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=8435.293..8435.293 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=8413.126..8418.113 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external sort  Disk: 6464kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6007.039..8379.853 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.771..8210.521 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.267..2427.808 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.156..49.160 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.032..28.573 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.056..0.056 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.038..0.043 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.014..0.127 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.029..0.030 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.580..6.580 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.105..5.297 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.027..3.078 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.031 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.010..0.015 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.372 ms
 Execution time: 8728.719 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7518.905..7518.912 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7503.776..7529.752 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7496.723..7511.937 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7481.418..7483.473 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3122kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=118.476..7452.968 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=118.346..7424.132 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=118.285..7332.741 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=117.908..7267.975 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=117.804..5665.807 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=117.730..1426.939 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.034..802.828 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=117.642..117.642 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.103..116.484 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.113..0.113 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.090..0.096 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.008..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.042..0.042 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.029..0.030 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.060..0.060 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
 Planning time: 8.307 ms
 Execution time: 7530.706 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=8933.127..10075.178 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=8897.613..10075.234 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=7943.955..9024.949 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=7897.632..8210.538 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 68720kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=6.319..6893.482 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=6.223..3200.189 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=6.097..317.106 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=5.958..286.911 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=5.856..88.050 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.737..30.677 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.081..6.467 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.061..0.061 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.031..0.036 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.038 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.794 ms
 Execution time: 10102.710 ms
(33 rows)

