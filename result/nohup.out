execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2386.560..2401.389 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1996.704..2325.392 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1996.676..2287.032 rows=40496 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1986.888..2145.554 rows=13499 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1986.851..2035.704 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 30672kB
                           Worker 0:  Sort Method: external merge  Disk: 26136kB
                           Worker 1:  Sort Method: external merge  Disk: 25424kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1706.298..1840.051 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1706.131..1799.052 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=358.454..1544.408 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.077..1005.070 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=357.629..357.629 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5536kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=27.618..328.132 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8839
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=22.242..22.243 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=88.417..88.417 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3776kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.040..46.877 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.093..0.093 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.061..0.066 rows=25 loops=3)
 Planning Time: 270.274 ms
 Execution Time: 2434.976 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=1020.283..1020.284 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=216.501..216.501 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.216..155.263 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.189..1.514 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.032 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.154..1.193 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.122..0.122 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.071 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=884.845..1020.170 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=662.820..684.558 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=1.812..569.720 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=1.757..8.063 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.040 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=1.717..7.537 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=1.680..1.680 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.042..0.292 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 88.739 ms
 Execution Time: 1022.268 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1717.688..1717.691 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1702.509..1759.888 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1695.535..1706.605 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1694.232..1695.856 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 1619kB
                     Worker 0:  Sort Method: quicksort  Memory: 2949kB
                     Worker 1:  Sort Method: quicksort  Memory: 3675kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1505.748..1684.451 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.110..1114.512 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=355.576..355.577 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.049..198.599 rows=500000 loops=3)
 Planning Time: 2.606 ms
 Execution Time: 1760.507 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=470.259..470.259 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=468.895..478.757 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=462.111..462.111 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=442.134..455.194 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.858..281.755 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8793
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.577..13.577 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=135.132..135.132 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.059..107.273 rows=66667 loops=3)
 Planning Time: 56.654 ms
 Execution Time: 479.159 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1179.153..1180.407 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=792.122..1110.413 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=792.092..947.287 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=66.360..383.032 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=59.968..288.375 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=9.027..177.988 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.336..8.945 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=50.258..50.259 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.057..41.907 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 32.130 ms
 Execution Time: 1186.021 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6417.402..6417.403 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5914.273..6417.247 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5786.870..6064.322 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=3257.167..4929.629 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=3236.280..3860.373 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=3225.807..3822.135 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.022..435.160 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=3201.000..3201.000 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=245.623..3200.948 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=9.467..1768.541 rows=1500009 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.218..2239.950 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.189..1463.199 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=7.641..7.641 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=11.444..158.164 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.145 ms
 Execution Time: 6435.723 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4762.596..4762.596 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=3004.208..4769.764 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=4015.895..4015.895 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=28.827..4015.826 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=0.501..38.069 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=60.234..60.255 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=67221 lossy=33035
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=3.560..3.560 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.589 ms
 Execution Time: 4770.156 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4115.647..4115.745 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4115.593..4124.599 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4108.856..4108.856 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4108.732..4108.751 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.047..959.098 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.114 ms
 Execution Time: 4125.198 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7906.717..7906.821 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7876.773..7896.042 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7876.675..7894.726 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7859.927..7861.450 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=28.433..7815.569 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.792..4.060 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=3.599..27.191 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=272.836..389.787 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.005..0.005 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.036 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.930 ms
 Execution Time: 7907.650 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3868.170..3868.284 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3851.568..3859.993 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3851.548..3853.946 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=18.370..3712.604 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=18.305..3035.663 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=18.277..2578.925 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=10.164..3306.190 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=4.663..1219.601 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.032..969.298 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=4.496..4.496 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=1.935..3.632 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.036..0.040 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=1.891..3.213 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=1.843..1.843 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.008..0.008 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.005..0.005 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.558 ms
 Execution Time: 3869.491 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=1069.701..1072.613 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=977.486..1049.907 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=977.475..1015.226 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=970.010..996.198 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=969.970..971.808 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2890kB
                           Worker 0:  Sort Method: quicksort  Memory: 2748kB
                           Worker 1:  Sort Method: quicksort  Memory: 2833kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=44.198..949.076 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=43.939..283.408 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.045..185.367 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=43.207..43.208 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.053..37.350 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.025..0.025 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.433 ms
 Execution Time: 1075.782 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1168.992..1178.507 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1166.446..1184.239 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1159.025..1168.824 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1156.533..1160.162 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3914kB
                     Worker 0:  Sort Method: quicksort  Memory: 3889kB
                     Worker 1:  Sort Method: quicksort  Memory: 3889kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=28.605..1115.423 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.480..249.961 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8719
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.192..29.192 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.831 ms
 Execution Time: 1184.920 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1994.169..1994.170 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1993.834..1994.092 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1993.816..1994.245 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1961.936..1962.046 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1933.330..1938.011 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: external merge  Disk: 2808kB
                           Worker 0:  Sort Method: quicksort  Memory: 3221kB
                           Worker 1:  Sort Method: quicksort  Memory: 3206kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.800..1900.039 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.957..1845.949 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.817..1233.438 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.320..43.697 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.043..26.029 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.185..0.185 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.162..0.168 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.043..0.045 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.058..0.058 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.058..0.117 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.031..0.037 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.530..7.530 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..4.670 rows=10000 loops=3)
 Planning Time: 7.200 ms
 Execution Time: 1995.902 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=940.717..940.718 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=940.484..944.676 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=934.261..934.261 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.060..880.642 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.709 ms
 Execution Time: 944.897 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=8416.753..8416.753 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=8416.734..8416.999 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=8063.634..8063.635 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=8038.040..8046.364 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: external merge  Disk: 6480kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5929.434..8016.196 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.856..7817.237 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.310..2232.180 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.193..49.773 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.038..26.429 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.058..0.059 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.031..0.037 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.013..0.115 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.028..0.029 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.545..7.545 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.133..6.172 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.040..3.847 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.029..0.029 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 6.091 ms
 Execution Time: 8417.701 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=9342.147..9342.156 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=9326.325..9351.557 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=9318.233..9333.503 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=9302.995..9304.942 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3168kB
                     Worker 0:  Sort Method: quicksort  Memory: 3103kB
                     Worker 1:  Sort Method: quicksort  Memory: 3147kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=42.720..9273.835 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=42.556..9240.737 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=42.480..9130.382 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=34.491..9058.901 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=27.560..6816.605 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=27.472..1313.833 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.030..718.647 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=27.030..27.030 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.106..26.443 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.006..0.006 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.135..0.135 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.112..0.119 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.034..0.035 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.076..0.076 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.036..0.041 rows=25 loops=3)
 Planning Time: 8.335 ms
 Execution Time: 9352.664 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=10174.193..11576.710 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=10075.863..11576.755 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8624.592..9680.308 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8579.526..8886.922 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 52424kB
                     Worker 1:  Sort Method: external merge  Disk: 73736kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=20.930..7637.928 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=20.840..3524.878 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=6.033..351.844 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.873..319.041 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.788..97.677 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.643..35.402 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.085..7.221 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.074..0.074 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.041..0.046 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.005..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.490 ms
 Execution Time: 11591.806 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2379.767..2394.393 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1906.064..2322.178 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1906.034..2281.224 rows=40620 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1895.729..2055.043 rows=13540 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1895.685..1944.590 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 26328kB
                           Worker 0:  Sort Method: external merge  Disk: 25288kB
                           Worker 1:  Sort Method: external merge  Disk: 30624kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1614.056..1749.729 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1613.910..1708.366 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=307.630..1461.531 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.104..975.604 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=306.715..306.716 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5600kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.581..276.141 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8329
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=21.253..21.254 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=79.262..79.262 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3712kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.036..37.663 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.073..0.073 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
 Planning Time: 4.613 ms
 Execution Time: 2426.281 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=840.342..840.344 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=208.856..208.857 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.199..147.090 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.181..1.414 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.021..0.028 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.151..1.103 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.111..0.111 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.067 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=704.596..840.256 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=490.239..511.852 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.359..397.773 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.308..5.499 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.034..0.042 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.257..4.977 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.227..0.227 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.014..0.198 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.267 ms
 Execution Time: 842.287 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1714.676..1714.679 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1700.773..1758.383 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1693.397..1704.469 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1692.126..1693.761 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 3289kB
                     Worker 0:  Sort Method: quicksort  Memory: 3253kB
                     Worker 1:  Sort Method: quicksort  Memory: 1525kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1504.808..1682.402 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.165..1096.552 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=356.941..356.941 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.041..201.020 rows=500000 loops=3)
 Planning Time: 2.333 ms
 Execution Time: 1759.301 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=366.460..366.460 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=364.801..373.702 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=358.360..358.360 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=339.088..351.560 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.766..258.597 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8318
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.553..13.553 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=55.417..55.418 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.055..28.804 rows=66667 loops=3)
 Planning Time: 2.650 ms
 Execution Time: 374.283 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1127.937..1129.152 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=740.418..1059.046 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=740.385..896.043 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=63.263..332.259 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=56.872..256.859 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.685..150.345 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.281..8.611 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=47.520..47.521 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2496kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.058..39.879 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.059 ms
 Execution Time: 1134.657 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6031.412..6031.412 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5524.088..6031.327 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5395.354..5671.730 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=2983.625..4530.510 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=2983.546..3577.319 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=2983.457..3577.012 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.028..432.235 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=2958.687..2958.687 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=211.590..2958.632 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=8.835..1533.903 rows=1500010 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.077..2136.162 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.053..1356.574 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.055..0.055 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.051..135.412 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.137 ms
 Execution Time: 6049.397 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4872.677..4872.677 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4872.654..4872.866 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=4146.297..4146.298 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=71.458..4146.228 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=1.020..39.491 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=62.187..62.208 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=112440 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.853..1.853 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.516 ms
 Execution Time: 4873.274 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4115.181..4115.306 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4115.129..4124.195 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4108.441..4108.442 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4108.308..4108.326 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.048..961.945 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.095 ms
 Execution Time: 4124.799 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7766.729..7766.831 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7737.367..7756.113 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7737.270..7754.775 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7737.226..7738.759 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.173..7692.865 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.788..4.078 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=4.636..27.914 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=267.600..383.645 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.035 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.981 ms
 Execution Time: 7767.684 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3337.302..3337.416 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3320.532..3329.111 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3320.514..3322.956 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.701..3179.563 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=4.222..2541.742 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=4.197..2061.504 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=3.078..2774.904 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.906..1217.672 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.043..973.170 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.727..2.728 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.288..1.954 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.037..0.039 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.243..1.605 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.191..0.191 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.429 ms
 Execution Time: 3338.653 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=1057.608..1060.444 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=965.617..1037.689 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=965.606..1003.109 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=957.999..984.187 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=957.958..959.808 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2871kB
                           Worker 0:  Sort Method: quicksort  Memory: 2774kB
                           Worker 1:  Sort Method: quicksort  Memory: 2826kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=44.294..937.128 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=44.059..285.397 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.046..186.604 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=43.312..43.313 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.052..37.321 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.024..0.025 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.271 ms
 Execution Time: 1063.696 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1168.237..1177.829 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1165.705..1183.491 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1155.969..1165.760 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1153.493..1157.124 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3878kB
                     Worker 0:  Sort Method: quicksort  Memory: 3906kB
                     Worker 1:  Sort Method: quicksort  Memory: 3908kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=29.607..1112.001 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=29.489..249.766 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8691
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=30.203..30.203 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.836 ms
 Execution Time: 1184.225 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1762.249..1762.250 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1762.008..1762.186 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1761.981..1770.539 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1722.573..1722.666 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1693.901..1698.446 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3287kB
                           Worker 0:  Sort Method: external merge  Disk: 2720kB
                           Worker 1:  Sort Method: quicksort  Memory: 3281kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.577..1660.755 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.928..1607.114 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.799..1043.662 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.343..41.586 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.046..24.022 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.195..0.195 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.173..0.179 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.040..0.043 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.071..0.071 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.045..0.099 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.028..0.033 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.354..7.354 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.032..4.504 rows=10000 loops=3)
 Planning Time: 7.211 ms
 Execution Time: 1771.669 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=960.989..960.989 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=960.775..966.358 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=954.480..954.480 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.070..900.811 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.700 ms
 Execution Time: 966.581 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=7822.611..7822.612 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=7822.602..7822.789 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7359.323..7359.323 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7333.566..7341.871 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external merge  Disk: 6480kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5224.123..7312.313 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.798..7119.734 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.274..2034.515 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.180..47.688 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..24.675 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.064..0.065 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.038..0.043 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.012..0.104 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.025..0.026 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.244..7.244 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.113..5.873 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.031..3.575 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.027..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.995 ms
 Execution Time: 7825.338 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7583.241..7583.248 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7567.699..7591.203 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7559.547..7574.920 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7544.276..7546.218 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3130kB
                     Worker 0:  Sort Method: quicksort  Memory: 3155kB
                     Worker 1:  Sort Method: quicksort  Memory: 3133kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=27.758..7515.537 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.597..7482.965 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.515..7387.544 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=27.095..7317.655 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=26.980..5646.967 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=26.904..1283.320 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.028..696.452 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.465..26.465 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.072..25.910 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.151..0.151 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.127..0.134 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.052..0.052 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.041..0.041 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.071..0.071 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.028..0.033 rows=25 loops=3)
 Planning Time: 8.248 ms
 Execution Time: 7592.301 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=10183.770..11588.637 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=10085.102..11588.689 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8649.977..9707.477 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8604.708..8913.269 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 52424kB
                     Worker 1:  Sort Method: external merge  Disk: 73736kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=20.966..7651.951 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=20.887..3532.585 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.938..357.076 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.781..324.410 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.696..97.197 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.575..35.231 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.080..7.168 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.070..0.071 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.042 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.005..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.459 ms
 Execution Time: 11603.821 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2375.472..2390.159 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1905.626..2317.549 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1905.605..2278.764 rows=40231 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1896.662..2055.870 rows=13410 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1896.618..1945.563 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 26064kB
                           Worker 0:  Sort Method: external merge  Disk: 25440kB
                           Worker 1:  Sort Method: external merge  Disk: 30736kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1614.095..1750.327 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1613.940..1708.953 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=310.485..1459.895 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.121..965.989 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=309.559..309.560 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5536kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.354..278.137 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8774
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=21.003..21.004 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=79.989..79.989 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3776kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.038..37.938 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.083..0.083 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.045..0.049 rows=25 loops=3)
 Planning Time: 4.570 ms
 Execution Time: 2424.801 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=879.963..879.965 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=229.218..229.218 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.192..167.310 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.174..1.548 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.020..0.027 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.146..1.240 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.108..0.108 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.078 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=745.197..879.875 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=510.508..532.027 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.369..417.116 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.315..5.599 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.032..0.038 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.267..5.052 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.238..0.238 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.014..0.209 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.278 ms
 Execution Time: 882.093 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1729.258..1729.260 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1715.367..1772.792 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1708.012..1719.083 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1706.701..1708.336 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 3254kB
                     Worker 0:  Sort Method: quicksort  Memory: 1595kB
                     Worker 1:  Sort Method: quicksort  Memory: 3217kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1519.749..1697.102 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.118..1106.394 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=377.866..377.867 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.041..208.968 rows=500000 loops=3)
 Planning Time: 2.303 ms
 Execution Time: 1773.720 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=368.141..368.142 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=366.294..375.450 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=359.955..359.956 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=340.473..353.120 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.697..259.186 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8387
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.472..13.472 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=55.997..55.997 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.057..29.082 rows=66667 loops=3)
 Planning Time: 2.097 ms
 Execution Time: 376.089 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1127.456..1128.658 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=741.488..1058.709 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=741.457..896.011 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=62.861..333.670 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=56.443..257.497 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.635..151.085 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.302..8.558 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=47.261..47.261 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.060..39.528 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.097 ms
 Execution Time: 1134.143 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6022.624..6022.624 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5519.724..6022.539 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5392.399..5668.228 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=2975.489..4525.272 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=2975.407..3572.530 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=2975.319..3572.245 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.028..434.326 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=2950.524..2950.525 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=211.728..2950.476 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=8.799..1526.827 rows=1500010 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.096..2128.050 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.072..1349.075 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.051..0.051 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.055..135.331 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.072 ms
 Execution Time: 6040.543 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4784.385..4784.385 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4784.362..4784.586 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=4075.973..4075.974 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=757.084..4075.907 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=0.854..38.803 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=61.134..61.155 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=112388 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.835..1.835 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.550 ms
 Execution Time: 4785.006 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4111.693..4111.812 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4111.640..4120.009 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4104.899..4104.900 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4104.775..4104.794 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.047..957.501 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.076 ms
 Execution Time: 4120.616 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7756.070..7756.173 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7726.836..7745.478 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7726.741..7744.164 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7726.696..7728.209 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.164..7682.690 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.785..4.059 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=3.670..27.180 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=271.018..383.139 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.035 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.912 ms
 Execution Time: 7757.003 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3699.938..3700.052 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3683.324..3691.755 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3683.307..3685.716 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.470..3541.144 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=4.014..2861.460 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=3.991..2321.725 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=3.031..3096.970 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.945..1265.620 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.048..1020.229 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.763..2.763 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.312..2.003 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.037..0.040 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.260..1.649 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.208..0.208 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.007..0.007 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.007..0.007 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.300 ms
 Execution Time: 3701.270 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=1059.419..1062.287 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=967.624..1039.616 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=967.613..1004.927 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=960.429..986.591 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=960.388..962.212 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2847kB
                           Worker 0:  Sort Method: quicksort  Memory: 2792kB
                           Worker 1:  Sort Method: quicksort  Memory: 2831kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=44.809..939.204 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=44.580..284.961 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.064..185.467 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=43.831..43.832 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.057..37.824 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.024..0.025 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.297 ms
 Execution Time: 1065.540 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1174.377..1184.245 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1171.809..1189.689 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1164.398..1174.204 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1161.891..1165.534 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3941kB
                     Worker 0:  Sort Method: quicksort  Memory: 3867kB
                     Worker 1:  Sort Method: quicksort  Memory: 3884kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=28.788..1120.413 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.659..251.242 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8821
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.395..29.395 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.848 ms
 Execution Time: 1190.489 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1765.468..1765.469 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1765.219..1765.404 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1765.194..1773.808 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1724.605..1724.701 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1696.043..1700.621 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3289kB
                           Worker 0:  Sort Method: external merge  Disk: 2712kB
                           Worker 1:  Sort Method: quicksort  Memory: 3290kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.588..1662.950 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.894..1609.107 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.762..1044.767 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.302..41.741 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.041..24.198 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.177..0.177 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.155..0.161 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.038..0.041 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.056..0.056 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.045..0.099 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.028..0.033 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.397..7.397 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.024..4.539 rows=10000 loops=3)
 Planning Time: 7.232 ms
 Execution Time: 1774.906 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=953.953..953.953 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=953.727..959.362 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=947.436..947.437 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.065..894.094 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.735 ms
 Execution Time: 959.593 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=7746.913..7746.913 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=7746.899..7754.804 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7358.597..7358.597 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7332.736..7341.015 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external merge  Disk: 6480kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5424.220..7311.561 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.772..7116.764 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.259..2030.004 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.174..47.564 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.037..24.556 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.057..0.058 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.031..0.036 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.012..0.104 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.025..0.026 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.295..7.295 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.116..5.918 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..3.597 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.028..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.951 ms
 Execution Time: 7757.515 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7645.665..7645.674 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7630.355..7653.722 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7622.257..7637.429 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7607.143..7609.073 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3125kB
                     Worker 0:  Sort Method: quicksort  Memory: 3147kB
                     Worker 1:  Sort Method: quicksort  Memory: 3146kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=27.602..7578.505 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.448..7545.920 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.370..7450.141 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=26.947..7379.466 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=26.850..5685.642 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=26.762..1284.670 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.028..695.047 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.323..26.324 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.102..25.775 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.152..0.152 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.129..0.136 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.053..0.053 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.042..0.043 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.070..0.070 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.028..0.033 rows=25 loops=3)
 Planning Time: 8.320 ms
 Execution Time: 7654.975 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=10130.766..11532.212 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=10032.433..11532.286 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8588.696..9643.599 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8543.812..8851.378 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 73736kB
                     Worker 1:  Sort Method: external merge  Disk: 52424kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=20.609..7597.448 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=20.520..3494.049 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.895..353.296 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.737..321.061 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.657..96.489 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.533..34.941 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.081..7.118 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.071..0.072 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.038..0.042 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.005..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.526 ms
 Execution Time: 11547.793 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2305.503..2320.185 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1859.789..2247.444 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1859.777..2205.538 rows=40197 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1850.797..2010.371 rows=13399 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1850.752..1899.725 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 25920kB
                           Worker 0:  Sort Method: external merge  Disk: 30736kB
                           Worker 1:  Sort Method: external merge  Disk: 25592kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1558.636..1690.021 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1558.480..1648.501 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=291.190..1406.460 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.091..939.819 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=290.370..290.370 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5568kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=27.696..263.398 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8602
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=22.299..22.299 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=79.131..79.131 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3744kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.035..36.356 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.081..0.081 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
 Planning Time: 4.620 ms
 Execution Time: 2349.838 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=839.779..839.780 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=209.385..209.385 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.201..147.605 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.183..1.416 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.032 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.151..1.101 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.112..0.112 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.067 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=704.493..839.691 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=489.646..511.344 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.360..396.578 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.307..5.631 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.034..0.042 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.257..5.102 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.227..0.227 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.014..0.197 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.327 ms
 Execution Time: 841.817 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1662.141..1662.144 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1647.792..1702.999 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1640.803..1651.758 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1639.524..1641.145 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 1633kB
                     Worker 0:  Sort Method: quicksort  Memory: 3588kB
                     Worker 1:  Sort Method: quicksort  Memory: 3022kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1460.287..1629.662 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.182..1074.084 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=351.043..351.044 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.041..198.451 rows=500000 loops=3)
 Planning Time: 2.343 ms
 Execution Time: 1703.613 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=366.388..366.388 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=364.850..373.857 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=358.194..358.194 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=338.919..351.388 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.617..258.950 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8516
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.404..13.404 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=55.175..55.176 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.053..28.995 rows=66667 loops=3)
 Planning Time: 2.692 ms
 Execution Time: 374.478 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1129.037..1130.241 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=742.952..1060.378 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=742.921..897.646 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=62.846..333.754 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=56.585..257.261 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.697..150.868 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.350..8.619 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=47.264..47.265 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.056..39.826 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.004 ms
 Execution Time: 1135.836 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6057.271..6057.271 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5553.500..6057.186 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5425.883..5702.349 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=3005.266..4556.717 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=3005.180..3603.013 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=3005.083..3602.724 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.028..435.425 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=2980.293..2980.293 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=210.853..2980.246 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=8.740..1554.270 rows=1500010 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.080..2118.079 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.056..1341.054 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.051..0.051 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.054..135.530 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.097 ms
 Execution Time: 6075.510 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4950.260..4950.260 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4950.238..4950.453 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=4141.915..4141.915 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=71.209..4141.848 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=0.774..39.278 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=62.124..62.146 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=112177 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.843..1.843 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.652 ms
 Execution Time: 4950.840 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4127.235..4127.330 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4127.161..4137.621 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4120.374..4120.375 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4120.251..4120.270 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.048..976.710 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.081 ms
 Execution Time: 4138.218 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7762.015..7762.120 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7732.656..7751.411 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7732.557..7750.092 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7732.510..7733.981 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.108..7687.938 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.724..4.000 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=4.399..26.224 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=270.105..383.389 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.037 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.971 ms
 Execution Time: 7762.956 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3586.627..3586.741 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3569.958..3578.414 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3569.940..3572.349 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.500..3430.193 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=4.053..2764.995 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=4.029..2237.377 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=3.068..2995.811 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.903..1247.392 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.045..1002.941 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.726..2.726 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.276..1.966 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.043..0.046 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.225..1.613 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.179..0.179 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.007..0.007 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.334 ms
 Execution Time: 3588.011 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=1061.290..1064.219 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=969.140..1041.345 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=969.129..1006.592 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=961.761..987.962 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=961.721..963.553 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2867kB
                           Worker 0:  Sort Method: quicksort  Memory: 2782kB
                           Worker 1:  Sort Method: quicksort  Memory: 2821kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=44.632..940.400 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=44.414..285.660 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.063..186.345 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=43.665..43.666 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.056..37.649 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.024..0.025 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.390 ms
 Execution Time: 1067.417 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1163.471..1172.135 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1160.990..1177.856 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1153.219..1162.990 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1150.749..1154.382 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3873kB
                     Worker 0:  Sort Method: quicksort  Memory: 3912kB
                     Worker 1:  Sort Method: quicksort  Memory: 3906kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=29.004..1110.225 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.874..249.106 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8627
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.595..29.595 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.851 ms
 Execution Time: 1178.582 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1779.007..1779.007 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1778.757..1778.942 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1778.732..1787.440 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1728.504..1728.601 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1700.075..1704.590 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3311kB
                           Worker 0:  Sort Method: external merge  Disk: 2720kB
                           Worker 1:  Sort Method: quicksort  Memory: 3264kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.599..1659.256 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.898..1605.444 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.752..1043.276 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.308..41.700 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.037..24.141 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.182..0.182 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.160..0.167 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.041..0.044 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.058..0.059 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.045..0.099 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.028..0.033 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.402..7.402 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.031..4.543 rows=10000 loops=3)
 Planning Time: 7.111 ms
 Execution Time: 1788.709 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=935.505..935.505 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=935.283..940.516 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=929.043..929.044 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.063..875.752 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.684 ms
 Execution Time: 940.733 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=8326.390..8326.390 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=8326.377..8336.098 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7939.292..7939.292 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7913.415..7921.757 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external merge  Disk: 6480kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5839.804..7892.011 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.828..7694.382 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.285..2192.353 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.179..49.385 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.038..26.137 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.058..0.059 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.032..0.037 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.013..0.113 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.027..0.028 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.521..7.521 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.115..6.146 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..3.823 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.027..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.941 ms
 Execution Time: 8338.963 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7602.610..7602.617 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7587.374..7610.317 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7579.297..7594.458 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7564.084..7566.028 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3149kB
                     Worker 0:  Sort Method: quicksort  Memory: 3145kB
                     Worker 1:  Sort Method: quicksort  Memory: 3123kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=27.947..7535.453 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.772..7502.652 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.672..7406.127 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=27.268..7335.481 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=27.162..5653.812 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=27.087..1295.110 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.028..702.687 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.681..26.682 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.110..26.131 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.134..0.134 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.112..0.119 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.035..0.036 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.084..0.084 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.041 rows=25 loops=3)
 Planning Time: 8.232 ms
 Execution Time: 7611.404 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=9742.834..11148.966 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=9644.103..11149.010 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8160.262..9217.465 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8115.190..8423.107 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 52424kB
                     Worker 1:  Sort Method: external merge  Disk: 73736kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=19.817..7169.672 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=19.729..3325.238 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.837..331.641 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.675..299.766 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.592..93.984 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.474..34.419 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.072..6.804 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.069..0.070 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.042 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.039 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.523 ms
 Execution Time: 11164.282 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2299.200..2313.778 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1828.529..2241.575 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1828.510..2198.302 rows=40423 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1820.591..1979.698 rows=13474 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1820.546..1869.412 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 25712kB
                           Worker 0:  Sort Method: external merge  Disk: 25760kB
                           Worker 1:  Sort Method: external merge  Disk: 30776kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1541.772..1672.568 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1541.612..1631.198 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=286.957..1392.530 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.060..930.468 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=286.123..286.124 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5568kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.540..259.414 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8537
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=21.196..21.197 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=76.814..76.814 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3744kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.037..35.944 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.076..0.076 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.042 rows=25 loops=3)
 Planning Time: 4.571 ms
 Execution Time: 2343.576 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=839.424..839.425 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=209.545..209.546 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.203..147.606 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.188..1.493 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.031 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.155..1.182 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.113..0.113 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.067 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=703.932..839.334 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=488.902..510.575 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.396..395.954 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.312..5.581 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.041 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.262..5.056 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.231..0.231 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.013..0.197 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.339 ms
 Execution Time: 841.522 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1712.675..1712.678 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1697.933..1756.721 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1690.962..1701.948 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1689.691..1691.352 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 1633kB
                     Worker 0:  Sort Method: quicksort  Memory: 2987kB
                     Worker 1:  Sort Method: quicksort  Memory: 3624kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1502.987..1679.932 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.200..1087.918 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=357.139..357.139 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3104kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.045..202.691 rows=500000 loops=3)
 Planning Time: 2.360 ms
 Execution Time: 1757.429 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=367.475..367.475 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=366.702..374.430 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=359.422..359.422 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=340.326..352.514 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.429..259.682 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8721
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.190..13.191 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=55.834..55.834 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.064..29.134 rows=66667 loops=3)
 Planning Time: 2.152 ms
 Execution Time: 374.742 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1161.393..1162.602 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=773.191..1092.582 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=773.161..928.637 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=64.765..361.174 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=58.395..264.174 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.945..155.172 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.332..8.866 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=48.780..48.781 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.058..40.555 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.020 ms
 Execution Time: 1168.224 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6164.812..6164.812 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5657.357..6164.728 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5528.963..5808.100 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=3097.923..4673.348 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=3097.839..3696.663 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=3097.738..3696.358 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.045..437.459 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=3072.775..3072.775 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=255.885..3072.725 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=9.193..1639.709 rows=1500009 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.083..2120.912 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.058..1345.430 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.054..0.054 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.053..139.372 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.142 ms
 Execution Time: 6182.293 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4664.848..4664.849 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4664.826..4665.046 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=3935.536..3935.536 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=69.148..3935.466 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=1.057..38.294 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=59.012..59.034 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=112388 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.793..1.793 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.596 ms
 Execution Time: 4665.435 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4136.314..4136.404 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4136.218..4146.670 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4129.400..4129.401 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4129.276..4129.294 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.047..977.581 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.118 ms
 Execution Time: 4147.298 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7766.245..7766.348 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7736.706..7755.599 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7736.610..7754.258 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7736.563..7738.039 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.217..7692.083 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.707..4.011 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=3.575..26.448 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=268.639..383.610 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.032..0.036 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.928 ms
 Execution Time: 7767.247 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3323.355..3323.469 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3306.750..3315.179 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3306.732..3309.132 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=6.142..3166.573 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=5.676..2549.757 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=5.652..2079.606 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=4.635..2772.116 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=4.465..1217.492 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.044..971.641 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=4.254..4.254 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.343..3.400 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.037..0.040 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.291..2.979 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.239..0.239 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.439 ms
 Execution Time: 3324.806 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=986.973..989.936 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=896.472..967.140 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=896.460..932.683 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=888.793..914.933 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=888.749..890.579 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2793kB
                           Worker 0:  Sort Method: quicksort  Memory: 2817kB
                           Worker 1:  Sort Method: quicksort  Memory: 2861kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=42.263..867.600 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=42.058..276.280 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.043..182.402 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=41.323..41.323 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.052..35.843 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.022..0.022 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.363 ms
 Execution Time: 993.085 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1166.012..1175.754 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1163.447..1181.468 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1156.226..1166.108 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1153.736..1157.414 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3874kB
                     Worker 0:  Sort Method: quicksort  Memory: 3882kB
                     Worker 1:  Sort Method: quicksort  Memory: 3936kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=28.859..1113.259 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.732..248.140 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8623
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.299..29.299 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.820 ms
 Execution Time: 1182.428 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1751.735..1751.736 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1751.441..1751.672 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1751.418..1759.658 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1722.414..1722.524 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1693.987..1698.528 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3281kB
                           Worker 0:  Sort Method: external merge  Disk: 2712kB
                           Worker 1:  Sort Method: quicksort  Memory: 3297kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.635..1661.149 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.890..1607.605 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.766..1046.769 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.307..41.739 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.037..24.233 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.190..0.190 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.164..0.170 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.047..0.050 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.057..0.057 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.046..0.099 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.028..0.033 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.446..7.446 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.031..4.554 rows=10000 loops=3)
 Planning Time: 7.281 ms
 Execution Time: 1760.696 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=961.323..961.323 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=961.124..966.225 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=954.765..954.765 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.066..901.130 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.706 ms
 Execution Time: 966.447 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=7835.928..7835.928 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=7835.918..7836.101 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7374.274..7374.274 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7348.534..7356.785 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external merge  Disk: 6480kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5234.711..7327.291 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.790..7131.677 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.285..2033.599 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.180..47.861 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..24.637 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.058..0.058 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.031..0.037 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.012..0.104 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.025..0.026 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.308..7.308 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.114..5.925 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.031..3.608 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.027..0.027 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.993 ms
 Execution Time: 7838.769 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7579.776..7579.843 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7564.341..7587.797 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7556.470..7571.773 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7541.275..7543.206 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3147kB
                     Worker 0:  Sort Method: quicksort  Memory: 3132kB
                     Worker 1:  Sort Method: quicksort  Memory: 3140kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=27.745..7512.405 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.595..7479.310 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.505..7382.543 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=27.112..7311.772 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=27.010..5642.642 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=26.937..1291.427 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.028..699.839 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.522..26.522 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.117..25.970 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.134..0.134 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.111..0.118 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.034..0.034 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.069..0.069 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.028..0.033 rows=25 loops=3)
 Planning Time: 8.210 ms
 Execution Time: 7588.996 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=9548.360..10947.579 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=9450.499..10947.598 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8115.580..9170.895 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8070.686..8377.726 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 52424kB
                     Worker 1:  Sort Method: external merge  Disk: 73736kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=20.074..7129.950 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=19.984..3314.270 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.861..334.404 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.682..302.530 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.596..93.517 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.480..34.370 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.072..6.756 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.076..0.077 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.038..0.043 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.039 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.489 ms
 Execution Time: 10961.966 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2319.373..2334.184 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1845.716..2261.025 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1845.697..2217.800 rows=40438 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1837.509..1996.826 rows=13479 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1837.462..1886.256 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 26616kB
                           Worker 0:  Sort Method: external merge  Disk: 24936kB
                           Worker 1:  Sort Method: external merge  Disk: 30688kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1558.386..1691.186 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1558.237..1649.874 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=289.161..1408.124 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.066..943.290 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=288.340..288.341 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5568kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.592..261.490 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8627
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=21.179..21.179 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=77.099..77.099 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3776kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.037..36.183 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.075..0.075 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.036..0.040 rows=25 loops=3)
 Planning Time: 4.558 ms
 Execution Time: 2364.106 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=858.539..858.541 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=218.784..218.784 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.201..157.057 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.184..1.526 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.033 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.150..1.209 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.109..0.109 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.072 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=723.236..858.448 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=498.961..520.538 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.359..405.765 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.307..5.594 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.034..0.043 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.257..5.071 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.226..0.226 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.013..0.202 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.295 ms
 Execution Time: 860.599 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1674.793..1674.797 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1662.258..1716.594 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1654.899..1665.896 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1653.611..1655.234 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2139kB
                     Worker 0:  Sort Method: quicksort  Memory: 3218kB
                     Worker 1:  Sort Method: quicksort  Memory: 3093kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1474.968..1643.783 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.116..1068.128 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=349.865..349.866 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.041..197.399 rows=500000 loops=3)
 Planning Time: 2.303 ms
 Execution Time: 1717.220 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=366.551..366.551 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=365.437..373.841 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=358.317..358.317 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=339.241..351.394 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=19.431..258.791 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8421
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=14.209..14.209 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=55.783..55.784 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.055..28.640 rows=66667 loops=3)
 Planning Time: 2.581 ms
 Execution Time: 374.154 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1125.303..1126.505 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=739.355..1056.579 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=739.324..894.154 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=63.043..330.790 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=56.732..256.206 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.547..150.055 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.318..8.471 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=47.511..47.512 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.052..39.816 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.007 ms
 Execution Time: 1131.966 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6140.680..6140.681 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5632.037..6140.595 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5502.081..5780.597 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=3052.187..4620.772 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=3052.113..3649.853 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=3052.020..3649.561 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.029..436.363 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=3027.102..3027.102 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=210.642..3027.052 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=9.080..1599.068 rows=1500009 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.084..2122.874 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.060..1347.125 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.052..0.052 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.050..138.540 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.091 ms
 Execution Time: 6158.174 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4712.730..4712.731 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4303.716..4720.183 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=3947.001..3947.002 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=873.196..3946.931 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=0.823..38.331 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=59.186..59.207 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=102423 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.784..1.784 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.629 ms
 Execution Time: 4720.572 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4114.657..4114.773 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4114.605..4123.167 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4107.839..4107.840 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4107.707..4107.725 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.052..958.982 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.089 ms
 Execution Time: 4123.765 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7758.097..7758.200 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7728.706..7747.462 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7728.609..7746.122 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7728.567..7730.092 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.134..7683.875 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.750..4.025 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=3.644..26.663 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=268.302..383.207 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.048..0.049 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.037 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.968 ms
 Execution Time: 7759.088 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3338.459..3338.573 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3321.902..3330.292 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3321.883..3324.266 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.456..3182.024 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=4.007..2557.370 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=3.984..2084.022 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=3.025..2783.897 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.916..1221.437 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.040..976.910 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.748..2.749 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.281..2.008 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.037..0.040 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.236..1.660 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.186..0.186 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.313 ms
 Execution Time: 3339.876 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=985.422..988.348 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=894.690..965.681 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=894.679..931.035 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=887.316..913.320 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=887.274..889.104 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2814kB
                           Worker 0:  Sort Method: quicksort  Memory: 2824kB
                           Worker 1:  Sort Method: quicksort  Memory: 2832kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=42.158..866.017 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=41.949..275.270 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.042..181.259 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=41.247..41.248 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.050..35.840 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.022..0.022 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.348 ms
 Execution Time: 991.360 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1276.468..1286.371 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1273.922..1294.085 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1266.419..1276.198 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1263.926..1267.564 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3938kB
                     Worker 0:  Sort Method: quicksort  Memory: 3840kB
                     Worker 1:  Sort Method: quicksort  Memory: 3914kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=29.025..1223.223 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.898..269.351 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8837
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.590..29.590 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.016..0.016 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.789 ms
 Execution Time: 1294.903 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1788.491..1788.492 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1788.250..1788.428 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1788.225..1796.630 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1748.558..1748.654 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1719.963..1724.506 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3328kB
                           Worker 0:  Sort Method: quicksort  Memory: 3263kB
                           Worker 1:  Sort Method: external merge  Disk: 2704kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.581..1686.464 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.900..1632.413 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.744..1060.531 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.296..42.080 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.037..24.467 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.177..0.177 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.154..0.161 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.039..0.042 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.056..0.056 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.028..0.029 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.046..0.100 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.029..0.034 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.386..7.386 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.032..4.524 rows=10000 loops=3)
 Planning Time: 7.179 ms
 Execution Time: 1797.670 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=944.001..944.001 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=943.777..948.709 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=937.473..937.474 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.059..883.906 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.705 ms
 Execution Time: 948.931 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=7806.584..7806.584 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=7806.572..7814.442 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7413.497..7413.497 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7387.749..7396.037 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external merge  Disk: 6480kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5461.917..7366.214 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.739..7170.224 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.262..2046.058 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.172..47.984 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.035..24.757 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.056..0.057 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.030..0.035 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.012..0.105 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.025..0.026 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.323..7.323 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.114..5.963 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.031..3.630 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.028..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.940 ms
 Execution Time: 7817.103 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7596.942..7596.952 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7581.651..7604.849 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7573.605..7588.826 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7558.447..7560.390 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3123kB
                     Worker 0:  Sort Method: quicksort  Memory: 3159kB
                     Worker 1:  Sort Method: quicksort  Memory: 3136kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=28.004..7529.829 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.853..7497.075 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.770..7400.081 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=27.346..7329.597 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=27.243..5662.393 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=27.160..1298.992 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.030..706.345 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.738..26.738 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.110..26.182 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.140..0.140 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.118..0.125 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.052..0.052 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.042..0.042 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.069..0.069 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.028..0.033 rows=25 loops=3)
 Planning Time: 8.349 ms
 Execution Time: 7605.948 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=10008.294..11504.086 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=9965.651..11504.149 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8581.209..9633.286 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8536.515..8840.535 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 73752kB
                     Worker 1:  Sort Method: external merge  Disk: 52408kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=21.054..7594.517 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=20.957..3499.618 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.975..354.098 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.797..321.744 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.701..97.549 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.577..35.478 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.078..7.184 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.072..0.072 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.041..0.045 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.005..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.438 ms
 Execution Time: 11519.458 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2279.526..2294.137 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1837.102..2221.700 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1837.090..2180.036 rows=40050 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1827.985..1987.126 rows=13350 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1827.940..1876.747 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 25760kB
                           Worker 0:  Sort Method: external merge  Disk: 30664kB
                           Worker 1:  Sort Method: external merge  Disk: 25792kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1551.271..1682.106 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1551.121..1640.648 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=290.016..1401.126 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.051..936.103 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=289.195..289.195 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5568kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.599..261.246 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8530
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=21.233..21.233 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=77.450..77.450 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3744kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.038..36.133 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.074..0.074 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.039 rows=25 loops=3)
 Planning Time: 4.606 ms
 Execution Time: 2323.805 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=840.061..840.062 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=209.386..209.386 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.200..147.591 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.186..1.447 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.030 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.154..1.120 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.113..0.113 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.067 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=704.587..839.975 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=489.722..511.402 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.362..396.753 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.310..5.612 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.034..0.042 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.260..5.073 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.229..0.229 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.013..0.197 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.267 ms
 Execution Time: 842.065 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1682.731..1682.734 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1668.669..1723.682 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1661.847..1672.872 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1660.572..1662.219 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2083kB
                     Worker 0:  Sort Method: quicksort  Memory: 3067kB
                     Worker 1:  Sort Method: quicksort  Memory: 3300kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1475.238..1650.689 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.142..1071.962 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=352.689..352.690 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.040..198.951 rows=500000 loops=3)
 Planning Time: 2.353 ms
 Execution Time: 1724.304 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=363.674..363.674 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=361.846..370.877 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=355.403..355.403 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=336.466..348.614 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.385..257.201 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8357
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.176..13.176 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=54.637..54.638 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.053..28.658 rows=66667 loops=3)
 Planning Time: 2.206 ms
 Execution Time: 371.520 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1125.964..1127.200 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=739.734..1057.220 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=739.689..894.519 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=62.425..331.109 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=56.089..256.094 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.546..150.330 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.324..8.466 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=47.161..47.161 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.051..39.648 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.084 ms
 Execution Time: 1132.726 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6138.023..6138.024 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5629.837..6137.938 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5501.177..5780.176 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=3060.321..4628.507 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=3060.239..3656.917 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=3060.115..3656.569 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.030..435.451 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=3035.207..3035.207 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=256.215..3035.158 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=9.548..1606.745 rows=1500010 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.088..2123.009 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.063..1347.458 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.060..0.060 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.052..139.037 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.184 ms
 Execution Time: 6155.580 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              

 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4656.709..4656.709 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4308.768..4664.410 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=3930.472..3930.472 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=68.553..3930.400 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=0.442..38.185 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=58.938..58.959 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=102368 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.780..1.780 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.557 ms
 Execution Time: 4664.832 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4113.435..4113.557 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4113.384..4122.153 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4106.490..4106.491 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4106.354..4106.374 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.043..958.421 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.096 ms
 Execution Time: 4122.759 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7764.175..7764.280 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7734.869..7753.556 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7734.774..7752.236 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7734.731..7736.255 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.127..7690.693 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.717..3.987 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=4.489..27.045 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=270.840..383.523 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.030..0.035 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.910 ms
 Execution Time: 7765.108 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3344.823..3344.938 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3328.348..3336.673 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3328.330..3330.730 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.435..3185.533 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=3.993..2556.457 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=3.970..2080.089 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=2.954..2785.416 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.828..1218.873 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.043..974.798 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.656..2.656 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.291..1.903 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.036..0.039 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.247..1.556 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.185..0.185 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.314 ms
 Execution Time: 3346.226 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=1056.156..1059.062 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=964.197..1036.334 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=964.186..1001.593 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=956.622..982.778 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=956.582..958.430 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2860kB
                           Worker 0:  Sort Method: quicksort  Memory: 2768kB
                           Worker 1:  Sort Method: quicksort  Memory: 2842kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=44.369..935.579 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=44.153..285.773 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.038..186.733 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=43.403..43.404 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.053..37.405 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.024..0.025 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.285 ms
 Execution Time: 1062.304 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1166.717..1175.818 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1164.176..1181.328 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1156.621..1166.401 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1154.136..1157.751 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3904kB
                     Worker 0:  Sort Method: quicksort  Memory: 3912kB
                     Worker 1:  Sort Method: quicksort  Memory: 3877kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=28.917..1113.413 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.796..250.240 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8736
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.405..29.405 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.837 ms
 Execution Time: 1182.054 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1882.310..1882.311 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1882.034..1882.232 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1882.007..1892.402 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1842.258..1842.359 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1813.638..1818.161 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3313kB
                           Worker 0:  Sort Method: external merge  Disk: 2712kB
                           Worker 1:  Sort Method: quicksort  Memory: 3266kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.780..1780.770 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.921..1726.676 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.797..1120.714 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.338..43.123 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.041..25.445 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.206..0.206 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.184..0.191 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.044..0.047 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.063..0.064 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.035..0.037 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.049..0.106 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.031..0.036 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.562..7.562 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..4.687 rows=10000 loops=3)
 Planning Time: 7.503 ms
 Execution Time: 1893.633 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=942.014..942.014 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=941.792..946.819 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=935.586..935.586 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.061..882.140 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.714 ms
 Execution Time: 947.036 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=8515.555..8515.556 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=8515.547..8515.737 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=8054.602..8054.602 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=8028.716..8037.051 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external merge  Disk: 6480kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5726.153..8000.510 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.835..7802.623 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.284..2220.753 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.181..49.844 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.039..26.468 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.066..0.066 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.040..0.045 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.013..0.115 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.028..0.029 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.512..7.512 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.115..6.119 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..3.797 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.028..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.017 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.993 ms
 Execution Time: 8518.261 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7585.435..7585.442 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7569.867..7593.039 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7562.016..7577.256 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7546.744..7548.692 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3142kB
                     Worker 0:  Sort Method: quicksort  Memory: 3140kB
                     Worker 1:  Sort Method: quicksort  Memory: 3135kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=27.532..7518.034 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.377..7485.033 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.278..7388.767 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=26.868..7318.041 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=26.767..5646.629 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=26.689..1290.240 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.031..698.819 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.386..26.387 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.085..25.842 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.135..0.135 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.112..0.119 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.044..0.044 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.034..0.034 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.070..0.070 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.028..0.033 rows=25 loops=3)
 Planning Time: 8.342 ms
 Execution Time: 7594.190 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=9636.026..11036.105 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=9538.120..11036.149 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8169.253..9226.156 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8124.278..8431.741 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 52424kB
                     Worker 1:  Sort Method: external merge  Disk: 73736kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=20.131..7175.283 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=20.038..3336.768 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.863..335.291 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.690..303.317 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.611..93.891 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.491..34.421 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.072..6.776 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.071..0.071 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.038..0.043 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.039 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.513 ms
 Execution Time: 11051.726 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2235.507..2250.443 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1850.612..2178.362 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1850.599..2138.661 rows=40347 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1842.380..2001.481 rows=13449 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1842.325..1891.428 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 30704kB
                           Worker 0:  Sort Method: external merge  Disk: 25232kB
                           Worker 1:  Sort Method: external merge  Disk: 26296kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1563.133..1695.818 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1562.996..1654.307 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=288.143..1398.514 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.050..934.988 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=287.344..287.345 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5536kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.514..260.124 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8582
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=21.114..21.115 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=76.572..76.572 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3776kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.036..36.141 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.074..0.074 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.036..0.040 rows=25 loops=3)
 Planning Time: 4.623 ms
 Execution Time: 2280.276 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=860.986..860.987 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=219.599..219.599 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.215..157.589 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.198..1.501 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.030 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.167..1.188 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.126..0.126 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.072 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=724.462..860.900 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=499.378..521.136 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.364..406.772 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.312..5.616 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.035..0.043 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.260..5.088 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.229..0.229 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.013..0.203 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.259 ms
 Execution Time: 863.066 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1659.974..1659.977 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1646.558..1700.981 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1639.524..1650.519 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1638.226..1639.850 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2084kB
                     Worker 0:  Sort Method: quicksort  Memory: 3270kB
                     Worker 1:  Sort Method: quicksort  Memory: 3096kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1460.021..1628.369 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.132..1073.169 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=351.410..351.410 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.046..198.240 rows=500000 loops=3)
 Planning Time: 2.333 ms
 Execution Time: 1701.618 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=389.395..389.395 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=387.860..397.843 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=380.763..380.764 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=361.104..373.847 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.641..277.908 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8713
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.400..13.400 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=57.491..57.492 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3552kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.055..29.557 rows=66667 loops=3)
 Planning Time: 2.677 ms
 Execution Time: 398.161 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1187.579..1188.790 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=802.086..1118.986 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=802.055..956.746 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=64.839..360.681 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=58.389..263.086 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=9.079..154.529 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.341..8.995 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=48.610..48.611 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.054..40.450 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.016 ms
 Execution Time: 1194.417 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6093.382..6093.383 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5579.857..6093.296 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5449.313..5728.250 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=2999.264..4567.696 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=2999.188..3600.018 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=2999.097..3599.727 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.029..438.199 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=2974.246..2974.246 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=195.065..2974.194 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=9.341..1544.379 rows=1500010 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.080..2108.664 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.056..1332.885 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.052..0.052 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.050..138.164 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.152 ms
 Execution Time: 6110.936 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              

 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4619.545..4619.545 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4292.449..4626.667 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=3913.744..3913.744 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=68.746..3913.674 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=1.158..38.264 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=58.683..58.704 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=102445 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.773..1.773 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.560 ms
 Execution Time: 4627.054 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4114.314..4114.417 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4114.262..4123.078 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4107.386..4107.387 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4107.262..4107.281 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.046..961.108 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.099 ms
 Execution Time: 4123.670 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7850.096..7850.200 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7820.408..7839.457 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7820.313..7838.115 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7820.265..7821.765 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.224..7775.671 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.842..4.108 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.186..26.601 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=273.783..387.775 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.045..0.046 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.030..0.034 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.909 ms
 Execution Time: 7851.023 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3338.446..3338.571 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3321.834..3330.244 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3321.817..3324.199 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.458..3180.353 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=4.010..2558.360 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=3.987..2085.034 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=3.074..2783.711 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.844..1219.869 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.044..975.672 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.673..2.673 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.280..1.930 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.036..0.038 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.236..1.581 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.185..0.185 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.340 ms
 Execution Time: 3339.838 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=1060.490..1063.355 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=968.895..1040.649 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=968.867..1005.971 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=961.289..987.408 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=961.248..963.067 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2834kB
                           Worker 0:  Sort Method: quicksort  Memory: 2808kB
                           Worker 1:  Sort Method: quicksort  Memory: 2829kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=44.502..939.970 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=44.282..285.770 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.046..186.913 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=43.548..43.548 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.057..37.554 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.024..0.025 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.268 ms
 Execution Time: 1066.570 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1165.204..1174.973 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1162.683..1180.680 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1155.094..1164.883 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1152.560..1156.188 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3903kB
                     Worker 0:  Sort Method: quicksort  Memory: 3897kB
                     Worker 1:  Sort Method: quicksort  Memory: 3892kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=28.826..1111.658 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.697..249.642 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8698
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.368..29.368 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.802 ms
 Execution Time: 1181.516 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1758.266..1758.267 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1758.015..1758.203 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1757.990..1766.668 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1719.662..1719.758 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1691.057..1695.576 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3293kB
                           Worker 0:  Sort Method: quicksort  Memory: 3288kB
                           Worker 1:  Sort Method: external merge  Disk: 2712kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.548..1657.764 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.950..1604.027 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.812..1041.398 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.329..41.539 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..24.044 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.200..0.200 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.164..0.171 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.040..0.043 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.064..0.064 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.035..0.036 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.045..0.098 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.028..0.033 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.302..7.302 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.032..4.437 rows=10000 loops=3)
 Planning Time: 7.132 ms
 Execution Time: 1767.842 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=937.215..937.215 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=937.004..942.086 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=930.764..930.765 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.059..877.506 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.733 ms
 Execution Time: 942.303 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=8263.849..8263.849 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=8263.832..8272.491 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7870.635..7870.635 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7845.227..7853.489 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: external merge  Disk: 6480kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5790.919..7823.514 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.819..7626.929 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.293..2179.175 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.183..49.051 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.039..26.016 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.065..0.065 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.038..0.044 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.013..0.112 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.027..0.028 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.485..7.485 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.116..6.119 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..3.804 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.028..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.997 ms
 Execution Time: 8273.284 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7611.926..7611.934 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7596.750..7620.153 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7588.696..7603.980 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7573.495..7575.424 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3146kB
                     Worker 0:  Sort Method: quicksort  Memory: 3144kB
                     Worker 1:  Sort Method: quicksort  Memory: 3128kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=27.794..7544.777 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.620..7511.409 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.553..7415.436 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=27.126..7344.794 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=27.015..5666.506 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=26.935..1292.513 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.028..700.605 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.508..26.509 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.082..25.958 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.135..0.135 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.113..0.120 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.035..0.035 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.075..0.075 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
 Planning Time: 8.330 ms
 Execution Time: 7621.317 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=9646.511..11046.457 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=9548.273..11046.484 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8108.788..9163.290 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8063.802..8370.893 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 52424kB
                     Worker 1:  Sort Method: external merge  Disk: 73736kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=19.895..7126.149 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=19.805..3312.225 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.812..330.536 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.656..298.612 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.576..93.407 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.452..34.260 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.076..6.760 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.072..0.073 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.038..0.043 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.039 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.415 ms
 Execution Time: 11061.593 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2305.854..2320.623 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1836.776..2248.036 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1836.755..2204.895 rows=40238 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1827.857..1987.280 rows=13413 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1827.809..1876.664 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 26208kB
                           Worker 0:  Sort Method: external merge  Disk: 25776kB
                           Worker 1:  Sort Method: external merge  Disk: 30264kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1550.409..1681.702 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1550.260..1640.354 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=286.698..1401.466 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.053..938.643 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=285.889..285.890 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5568kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.200..258.727 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8578
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=20.860..20.860 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=76.293..76.294 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3744kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.040..35.850 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.074..0.074 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.036..0.040 rows=25 loops=3)
 Planning Time: 4.554 ms
 Execution Time: 2350.334 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=834.697..834.698 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=208.135..208.136 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.199..146.879 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.183..1.408 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.023..0.031 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.150..1.096 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.112..0.113 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.005..0.067 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=699.335..834.609 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=485.737..507.275 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.357..393.360 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.302..5.459 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.035..0.044 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.251..4.938 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.222..0.222 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.013..0.196 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.201 ms
 Execution Time: 836.783 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1709.175..1709.177 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1695.422..1752.629 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1688.382..1699.465 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1687.100..1688.766 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 3249kB
                     Worker 0:  Sort Method: quicksort  Memory: 3237kB
                     Worker 1:  Sort Method: quicksort  Memory: 1579kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1500.157..1677.369 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.203..1086.543 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=358.760..358.760 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.040..204.436 rows=500000 loops=3)
 Planning Time: 2.364 ms
 Execution Time: 1753.515 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=364.151..364.151 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=362.352..371.619 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=356.083..356.083 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=337.084..349.287 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.469..257.392 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8380
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.290..13.291 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=55.059..55.059 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.052..28.679 rows=66667 loops=3)
 Planning Time: 2.672 ms
 Execution Time: 372.220 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1129.288..1130.500 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=741.441..1060.489 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=741.410..896.833 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=62.658..331.607 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=56.394..256.390 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.564..150.320 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.353..8.485 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=47.164..47.165 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2496kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.056..39.658 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.020 ms
 Execution Time: 1136.042 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6100.047..6100.047 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5587.684..6099.962 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5457.741..5735.897 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=3012.904..4582.334 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=3012.822..3613.890 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=3012.707..3613.582 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.029..438.037 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=2987.827..2987.827 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=211.099..2987.778 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=9.196..1561.473 rows=1500010 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.081..2124.467 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.056..1348.787 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.055..0.055 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.052..138.131 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.140 ms
 Execution Time: 6117.650 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4624.266..4624.266 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4311.702..4631.397 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=3921.094..3921.094 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=68.409..3921.023 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=1.065..38.151 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=58.796..58.817 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=102401 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.775..1.775 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.551 ms
 Execution Time: 4631.784 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4129.663..4129.765 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4129.583..4139.878 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4122.770..4122.771 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4122.645..4122.663 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.048..976.780 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.116 ms
 Execution Time: 4140.463 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7747.894..7747.996 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7718.562..7737.306 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7718.465..7735.969 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7718.421..7719.887 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.080..7674.013 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.701..3.991 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=3.585..26.519 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=269.409..382.713 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.048..0.048 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.032..0.036 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.906 ms
 Execution Time: 7748.868 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3319.869..3319.983 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3303.250..3311.674 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3303.233..3305.620 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.513..3163.932 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=4.039..2536.201 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=4.015..2062.151 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=3.119..2764.663 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.821..1213.699 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.035..970.540 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.661..2.662 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.279..1.926 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.037..0.040 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.234..1.578 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.189..0.189 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.386 ms
 Execution Time: 3321.321 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=990.803..993.721 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=898.831..970.919 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=898.820..935.798 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=891.629..917.875 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=891.587..893.413 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2818kB
                           Worker 0:  Sort Method: quicksort  Memory: 2811kB
                           Worker 1:  Sort Method: quicksort  Memory: 2842kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=41.930..870.444 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=41.673..274.684 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.039..181.807 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=40.993..40.993 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1504kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.052..35.699 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.022..0.023 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.421 ms
 Execution Time: 996.833 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1164.613..1174.359 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1162.040..1180.225 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1154.003..1163.830 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1151.490..1155.131 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3913kB
                     Worker 0:  Sort Method: quicksort  Memory: 3904kB
                     Worker 1:  Sort Method: quicksort  Memory: 3875kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=28.640..1111.068 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.513..248.918 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8727
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.102..29.103 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.815 ms
 Execution Time: 1181.070 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1914.213..1914.213 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1913.894..1914.149 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1913.876..1914.298 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1883.024..1883.134 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1854.304..1858.941 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: external merge  Disk: 2768kB
                           Worker 0:  Sort Method: quicksort  Memory: 3231kB
                           Worker 1:  Sort Method: quicksort  Memory: 3254kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.928..1812.527 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.937..1757.489 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.797..1148.991 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.329..43.617 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.038..26.050 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.195..0.195 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.172..0.179 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.054..0.057 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.057..0.057 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.028..0.030 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.050..0.109 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.031..0.036 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.677..7.677 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.034..4.810 rows=10000 loops=3)
 Planning Time: 7.221 ms
 Execution Time: 1915.819 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=958.399..958.399 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=958.183..963.081 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=951.910..951.911 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.063..898.484 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.688 ms
 Execution Time: 963.309 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=7731.708..7731.708 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=7731.690..7731.947 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7334.866..7334.866 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7309.436..7317.719 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: external merge  Disk: 6480kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5406.067..7287.784 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.780..7094.694 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.286..2026.302 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.180..47.635 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.043..24.459 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.064..0.064 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.037..0.043 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.012..0.104 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.025..0.026 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.332..7.332 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.127..5.966 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.039..3.627 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.033..0.033 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.021 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.962 ms
 Execution Time: 7732.636 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7610.638..7610.645 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7595.412..7618.723 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7587.555..7602.715 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7572.356..7574.302 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3149kB
                     Worker 0:  Sort Method: quicksort  Memory: 3160kB
                     Worker 1:  Sort Method: quicksort  Memory: 3109kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=27.756..7543.972 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.589..7510.847 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.506..7414.870 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=27.089..7344.903 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=26.992..5667.615 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=26.909..1284.448 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.033..697.773 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.451..26.452 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.129..25.896 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.134..0.134 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.112..0.119 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.034..0.035 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.076..0.076 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
 Planning Time: 8.147 ms
 Execution Time: 7619.825 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=9719.544..11124.834 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=9621.010..11124.882 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8154.454..9211.828 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8109.313..8417.409 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 52424kB
                     Worker 1:  Sort Method: external merge  Disk: 73736kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=19.798..7171.214 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=19.706..3322.790 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.834..333.465 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.672..301.537 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.595..93.636 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.475..34.471 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.071..6.756 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.069..0.070 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.036..0.041 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.039 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.458 ms
 Execution Time: 11140.589 ms
(35 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2222.212..2237.153 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1833.744..2161.675 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1833.732..2120.786 rows=40311 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1825.405..1985.035 rows=13437 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1825.359..1874.515 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 30736kB
                           Worker 0:  Sort Method: external merge  Disk: 25360kB
                           Worker 1:  Sort Method: external merge  Disk: 26152kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1547.110..1678.575 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1546.961..1637.301 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=288.296..1397.822 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.049..933.780 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=287.516..287.517 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5536kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.290..260.025 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8214
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=20.941..20.942 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=76.717..76.717 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3776kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.037..36.220 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.075..0.075 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.041 rows=25 loops=3)
 Planning Time: 4.655 ms
 Execution Time: 2266.842 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=846.792..846.793 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=210.557..210.558 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.200..148.443 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.183..1.412 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.022..0.029 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.153..1.102 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.114..0.114 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.067 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=709.807..846.706 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=493.718..515.526 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.373..399.943 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.316..5.543 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.035..0.042 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.265..5.015 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.235..0.235 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.014..0.199 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.301 ms
 Execution Time: 848.832 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1629.654..1629.657 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1617.011..1668.211 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1610.147..1621.184 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1608.862..1610.502 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2856kB
                     Worker 0:  Sort Method: quicksort  Memory: 2477kB
                     Worker 1:  Sort Method: quicksort  Memory: 3118kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1463.297..1598.735 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.198..1073.828 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=354.403..354.404 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.038..200.025 rows=500000 loops=3)
 Planning Time: 2.398 ms
 Execution Time: 1668.865 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=364.442..364.442 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=362.500..371.711 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=356.260..356.260 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=336.890..349.461 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=18.375..257.289 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8584
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=13.153..13.153 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=55.282..55.283 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.062..28.622 rows=66667 loops=3)
 Planning Time: 2.622 ms
 Execution Time: 372.275 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1128.199..1129.406 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=742.316..1059.614 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=742.287..896.830 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=62.227..331.835 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=55.987..256.883 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.472..151.012 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.280..8.386 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=46.966..46.966 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.057..39.548 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 2.976 ms
 Execution Time: 1135.005 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6062.791..6062.792 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5557.904..6062.707 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5430.165..5707.406 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=3012.724..4578.256 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=3012.648..3609.132 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=3012.552..3608.845 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.030..434.129 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=2987.674..2987.674 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=210.380..2987.621 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=9.146..1561.872 rows=1500010 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.084..2124.567 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.059..1348.931 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.051..0.051 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.051..138.498 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.079 ms
 Execution Time: 6080.349 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4613.240..4613.240 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4286.887..4620.405 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=3908.935..3908.936 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=68.235..3908.865 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=0.759..38.247 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=58.611..58.631 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=102384 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.779..1.779 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.603 ms
 Execution Time: 4620.854 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4106.722..4106.843 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4106.670..4115.182 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4100.023..4100.024 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4099.897..4099.916 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.047..953.562 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.065 ms
 Execution Time: 4115.785 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7724.844..7724.947 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7695.576..7714.296 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7695.481..7712.968 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7695.437..7696.974 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.166..7651.369 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.777..4.083 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=4.583..27.800 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=268.929..381.569 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.046..0.046 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.031..0.035 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.897 ms
 Execution Time: 7725.864 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3593.795..3593.909 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3577.120..3585.582 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3577.102..3579.536 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.544..3437.417 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=4.062..2768.681 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=4.038..2241.301 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=3.050..3001.929 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.934..1248.665 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.042..1004.149 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.755..2.755 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.282..2.008 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.037..0.040 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.236..1.653 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.185..0.185 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.007..0.007 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.009..0.009 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.325 ms
 Execution Time: 3595.220 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=1052.035..1054.903 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=960.329..1032.139 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=960.310..997.604 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=952.957..979.116 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=952.917..954.758 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2843kB
                           Worker 0:  Sort Method: quicksort  Memory: 2816kB
                           Worker 1:  Sort Method: quicksort  Memory: 2811kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=44.318..931.915 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=44.085..282.983 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.043..184.276 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=43.516..43.517 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.054..37.548 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.024..0.025 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.300 ms
 Execution Time: 1058.097 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1163.530..1173.138 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1161.001..1178.964 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1153.888..1163.689 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1151.397..1155.069 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3893kB
                     Worker 0:  Sort Method: quicksort  Memory: 3911kB
                     Worker 1:  Sort Method: quicksort  Memory: 3888kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=28.864..1110.802 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.749..248.886 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8724
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.361..29.361 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.014..0.014 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.799 ms
 Execution Time: 1179.752 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1889.322..1889.322 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1889.073..1889.258 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1889.046..1899.094 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1859.437..1859.533 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1830.961..1835.508 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3514kB
                           Worker 0:  Sort Method: quicksort  Memory: 3221kB
                           Worker 1:  Sort Method: external merge  Disk: 2728kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.997..1797.722 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.903..1743.408 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.769..1134.561 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.312..43.555 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.039..25.937 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.186..0.186 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.164..0.171 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.049..0.051 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.055..0.056 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.050..0.108 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.031..0.036 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.764..7.764 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.032..4.780 rows=10000 loops=3)
 Planning Time: 7.179 ms
 Execution Time: 1900.218 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=971.852..971.852 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=971.623..977.044 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=965.221..965.222 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.065..911.586 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.658 ms
 Execution Time: 977.263 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=7777.032..7777.032 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=7777.014..7784.582 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7398.912..7398.912 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7373.326..7381.560 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: external merge  Disk: 6480kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5448.224..7351.773 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.786..7157.630 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.281..2054.235 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.181..47.796 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.037..24.789 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.065..0.066 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.039..0.045 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.012..0.105 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.025..0.026 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.428..7.428 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.119..6.064 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.037..3.751 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.027..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 6.236 ms
 Execution Time: 7785.266 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=8676.991..8676.998 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=8661.658..8686.483 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=8653.251..8668.405 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=8638.056..8639.991 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3141kB
                     Worker 0:  Sort Method: quicksort  Memory: 3172kB
                     Worker 1:  Sort Method: quicksort  Memory: 3104kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=28.170..8609.552 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=28.010..8576.767 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.917..8470.942 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=27.509..8399.830 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=27.401..6432.299 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=27.315..1304.703 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.029..713.949 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=27.016..27.017 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.123..26.435 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.006..0.006 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.134..0.134 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.112..0.118 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.045..0.045 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.035..0.036 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.077..0.077 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.042 rows=25 loops=3)
 Planning Time: 8.498 ms
 Execution Time: 8687.583 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=9756.515..11163.463 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=9657.673..11163.504 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8183.543..9241.188 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8138.293..8446.481 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 73736kB
                     Worker 1:  Sort Method: external merge  Disk: 52424kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=20.143..7190.419 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=20.050..3330.776 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.933..332.259 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.750..300.200 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.654..93.845 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.531..34.335 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.074..6.805 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.085..0.086 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.042 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.004..0.039 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.575 ms
 Execution Time: 11179.080 ms
(35 rows)

