execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=21298.42..21302.97 rows=1819 width=280) (actual time=114.475..114.591 rows=1584 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 469kB
   ->  Finalize GroupAggregate  (cost=21016.69..21199.93 rows=1819 width=280) (actual time=106.456..112.407 rows=1584 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=21016.69..21166.49 rows=1070 width=280) (actual time=106.431..111.068 rows=1593 loops=1)
               Workers Planned: 1
               Workers Launched: 1
               ->  Partial GroupAggregate  (cost=20016.68..20046.11 rows=1070 width=280) (actual time=101.270..103.775 rows=796 loops=2)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=20016.68..20019.36 rows=1070 width=260) (actual time=101.243..101.395 rows=1859 loops=2)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: quicksort  Memory: 567kB
                           Worker 0:  Sort Method: quicksort  Memory: 521kB
                           ->  Hash Join  (cost=45.88..19962.84 rows=1070 width=260) (actual time=1.436..98.181 rows=1859 loops=2)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Nested Loop  (cost=44.31..19957.99 rows=1070 width=160) (actual time=1.316..96.664 rows=1859 loops=2)
                                       ->  Nested Loop  (cost=43.89..15136.11 rows=1070 width=16) (actual time=1.216..68.326 rows=1859 loops=2)
                                             ->  Parallel Bitmap Heap Scan on orders  (cost=43.46..5824.69 rows=1092 width=8) (actual time=1.107..23.826 rows=940 loops=2)
                                                   Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                   Heap Blocks: exact=947
                                                   ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..43.00 rows=1857 width=0) (actual time=1.733..1.733 rows=1879 loops=1)
                                                         Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                             ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..8.49 rows=4 width=16) (actual time=0.042..0.045 rows=2 loops=1879)
                                                   Index Cond: (l_orderkey = orders.o_orderkey)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 2
                                       ->  Index Scan using customer_pkey on customer  (cost=0.42..4.51 rows=1 width=148) (actual time=0.014..0.014 rows=1 loops=3718)
                                             Index Cond: (c_custkey = orders.o_custkey)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.056..0.056 rows=25 loops=2)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.025..0.029 rows=25 loops=2)
 Planning Time: 3.364 ms
 Execution Time: 116.624 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13433.18..13459.84 rows=10667 width=36) (actual time=469.311..469.370 rows=869 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 65kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4682.49..4682.50 rows=1 width=32) (actual time=128.510..128.510 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4442.48 rows=32000 width=10) (actual time=0.153..107.773 rows=32560 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.127..3.669 rows=407 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.018..0.025 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.101..3.491 rows=407 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=186
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.068..0.068 rows=407 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.68 rows=80 width=14) (actual time=0.018..0.234 rows=80 loops=407)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6837.01..8037.01 rows=10667 width=36) (actual time=432.250..468.826 rows=869 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 29770
         ->  Sort  (cost=6837.01..6917.01 rows=32000 width=14) (actual time=303.680..306.035 rows=32560 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: quicksort  Memory: 2295kB
               ->  Nested Loop  (cost=11.81..4442.48 rows=32000 width=14) (actual time=0.222..276.906 rows=32560 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.168..4.229 rows=407 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.017..0.024 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.136..4.036 rows=407 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=186
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.111..0.111 rows=407 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.68 rows=80 width=18) (actual time=0.027..0.636 rows=80 loops=407)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 2.602 ms
 Execution Time: 470.144 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                       QUERY PLAN                                                                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=209384.38..209628.84 rows=7 width=27) (actual time=1325.220..1325.223 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=209384.38..209628.66 rows=14 width=27) (actual time=1322.798..1327.101 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=208384.35..208627.02 rows=7 width=27) (actual time=1316.285..1318.707 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=208384.35..208414.68 rows=12130 width=27) (actual time=1313.800..1314.444 rows=10325 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 1176kB
                     Worker 0:  Sort Method: quicksort  Memory: 1201kB
                     Worker 1:  Sort Method: quicksort  Memory: 1197kB
                     ->  Parallel Hash Join  (cost=168916.02..207561.56 rows=12130 width=27) (actual time=1052.744..1305.003 rows=10325 loops=3)
                           Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                           ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.040..159.665 rows=500000 loops=3)
                           ->  Parallel Hash  (cost=168764.39..168764.39 rows=12130 width=15) (actual time=1051.796..1051.797 rows=10325 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 1760kB
                                 ->  Parallel Seq Scan on lineitem  (cost=0.00..168764.39 rows=12130 width=15) (actual time=0.136..1039.697 rows=10325 loops=3)
                                       Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                       Rows Removed by Filter: 1990080
 Planning Time: 2.278 ms
 Execution Time: 1327.565 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                               QUERY PLAN                                                                                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=116045.54..116045.56 rows=1 width=32) (actual time=526.689..526.689 rows=1 loops=1)
   ->  Gather  (cost=116045.31..116045.52 rows=2 width=64) (actual time=525.116..533.498 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=115045.31..115045.32 rows=1 width=64) (actual time=518.557..518.557 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=107885.74..114506.79 rows=30772 width=33) (actual time=449.709..500.265 rows=25451 loops=3)
                     Hash Cond: (part.p_partkey = lineitem.l_partkey)
                     ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.050..25.045 rows=66667 loops=3)
                     ->  Parallel Hash  (cost=107501.09..107501.09 rows=30772 width=16) (actual time=448.248..448.249 rows=25451 loops=3)
                           Buckets: 131072  Batches: 1  Memory Usage: 5088kB
                           ->  Parallel Bitmap Heap Scan on lineitem  (cost=1897.42..107501.09 rows=30772 width=16) (actual time=32.383..421.196 rows=25451 loops=3)
                                 Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=15263
                                 ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1878.95 rows=73852 width=0) (actual time=26.713..26.713 rows=76352 loops=1)
                                       Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
 Planning Time: 1.800 ms
 Execution Time: 533.854 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42589.57..42629.81 rows=16093 width=44) (actual time=924.479..925.662 rows=18400 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2221kB
   ->  GroupAggregate  (cost=40550.89..41465.14 rows=16093 width=44) (actual time=714.295..844.989 rows=18400 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40550.89..40701.55 rows=60266 width=40) (actual time=714.265..783.967 rows=120368 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 6152kB
               ->  Gather  (cost=7684.27..35766.05 rows=60266 width=40) (actual time=65.107..273.060 rows=120368 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6684.27..28739.45 rows=25111 width=40) (actual time=58.630..250.913 rows=40123 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21964.67 rows=166667 width=8) (actual time=9.092..152.207 rows=266560 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 107
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.319..9.025 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12555 width=40) (actual time=48.826..48.827 rows=10034 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2560kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12555 width=40) (actual time=0.051..39.978 rows=10034 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56632
 Planning Time: 2.918 ms
 Execution Time: 929.550 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=195920.86..195920.87 rows=1 width=32) (actual time=3030.158..3030.158 rows=1 loops=1)
   ->  Hash Join  (cost=6370.96..195915.53 rows=2130 width=8) (actual time=38.447..3029.939 rows=570 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         Join Filter: (lineitem.l_quantity < (SubPlan 1))
         Rows Removed by Join Filter: 5714
         ->  Seq Scan on lineitem  (cost=0.00..172515.15 rows=6001215 width=17) (actual time=0.048..1673.205 rows=6001215 loops=1)
         ->  Hash  (cost=6368.30..6368.30 rows=213 width=4) (actual time=35.637..35.637 rows=207 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 16kB
               ->  Gather  (cost=1000.00..6368.30 rows=213 width=4) (actual time=1.568..35.636 rows=207 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..5347.00 rows=89 width=4) (actual time=1.140..29.376 rows=69 loops=3)
                           Filter: ((p_brand = 'Brand#55'::bpchar) AND (p_container = 'LG BOX'::bpchar))
                           Rows Removed by Filter: 66598
         SubPlan 1
           ->  Aggregate  (cost=127.60..127.61 rows=1 width=32) (actual time=0.081..0.081 rows=1 loops=6284)
                 ->  Bitmap Heap Scan on lineitem lineitem_1  (cost=4.67..127.52 rows=31 width=5) (actual time=0.016..0.065 rows=31 loops=6284)
                       Recheck Cond: (l_partkey = part.p_partkey)
                       Heap Blocks: exact=196800
                       ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..4.67 rows=31 width=0) (actual time=0.010..0.010 rows=31 loops=6284)
                             Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 2.190 ms
 Execution Time: 3030.723 ms
(23 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=599988.69..601302.86 rows=525670 width=71) (actual time=9277.433..9277.433 rows=0 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=462034.19..528476.56 rows=525670 width=71) (actual time=9277.378..9277.378 rows=0 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=462034.19..517525.10 rows=438058 width=71) (actual time=9277.375..9285.586 rows=0 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=461034.16..465962.32 rows=219029 width=71) (actual time=9269.764..9269.764 rows=0 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=461034.16..461581.74 rows=219029 width=44) (actual time=9269.762..9269.762 rows=0 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: quicksort  Memory: 25kB
                           Worker 0:  Sort Method: quicksort  Memory: 25kB
                           Worker 1:  Sort Method: quicksort  Memory: 25kB
                           ->  Nested Loop  (cost=327808.40..434864.46 rows=219029 width=44) (actual time=9269.696..9269.696 rows=0 loops=3)
                                 ->  Parallel Hash Join  (cost=327807.97..369777.30 rows=54746 width=43) (actual time=9269.695..9269.696 rows=0 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=322816.72..364642.34 rows=54746 width=24) (actual time=9196.900..9196.900 rows=0 loops=3)
                                             Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.061..0.061 rows=1 loops=3)
                                             ->  Hash  (cost=320660.33..320660.33 rows=131391 width=4) (actual time=9194.522..9194.522 rows=0 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 1024kB
                                                   ->  GroupAggregate  (cost=0.43..319346.42 rows=131391 width=4) (actual time=9194.520..9194.521 rows=0 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                         Rows Removed by Filter: 1500000
                                                         ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283427.74 rows=6001215 width=9) (actual time=0.053..7148.077 rows=6001215 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=23) (actual time=70.683..70.683 rows=50000 loops=3)
                                             Buckets: 262144  Batches: 1  Memory Usage: 10304kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=23) (actual time=0.038..35.257 rows=50000 loops=3)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..1.04 rows=15 width=9) (never executed)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 3.349 ms
 Execution Time: 9286.378 ms
(36 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=21574.99..21575.00 rows=1 width=32) (actual time=115.714..115.714 rows=1 loops=1)
   ->  Gather  (cost=21574.77..21574.98 rows=2 width=32) (actual time=115.281..119.107 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=20574.77..20574.78 rows=1 width=32) (actual time=107.993..107.993 rows=1 loops=3)
               ->  Nested Loop  (cost=4.65..20574.63 rows=18 width=12) (actual time=4.811..107.932 rows=14 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=103 width=30) (actual time=0.541..39.004 rows=80 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66587
                     ->  Bitmap Heap Scan on lineitem  (cost=4.65..125.58 rows=1 width=21) (actual time=0.799..0.858 rows=0 loops=239)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 30
                           Heap Blocks: exact=2687
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..4.65 rows=31 width=0) (actual time=0.044..0.044 rows=30 loops=239)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.687 ms
 Execution Time: 119.470 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=243413.99..243416.07 rows=6 width=236) (actual time=4133.936..4133.990 rows=4 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=243413.99..243415.39 rows=12 width=236) (actual time=4133.839..4139.986 rows=12 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=242413.97..242413.99 rows=6 width=236) (actual time=4127.333..4127.333 rows=4 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=242413.73..242413.89 rows=6 width=236) (actual time=4127.217..4127.236 rows=4 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143759.33 rows=2466360 width=25) (actual time=0.061..936.271 rows=1975815 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 24590
 Planning Time: 1.476 ms
 Execution Time: 4140.519 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=7001.80..7001.81 rows=1 width=51) (actual time=32.180..32.180 rows=0 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 25kB
   ->  Hash Join  (cost=6990.84..7001.79 rows=1 width=51) (actual time=32.112..32.113 rows=0 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=6989.52..7000.39 rows=27 width=55) (actual time=31.990..31.990 rows=0 loops=1)
               ->  HashAggregate  (cost=6989.23..6989.50 rows=27 width=4) (actual time=31.989..31.989 rows=0 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..6989.17 rows=27 width=4) (actual time=31.988..31.988 rows=0 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=31.987..33.229 rows=0 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=26.153..26.153 rows=0 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66667
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..42.41 rows=1 width=8) (never executed)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (never executed)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (never executed)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.40 rows=1 width=59) (never executed)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.070..0.070 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.053..0.058 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.841 ms
 Execution Time: 33.841 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=169890.75..169890.76 rows=1 width=34) (actual time=1873.860..1873.883 rows=373 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 54kB
   ->  GroupAggregate  (cost=169890.72..169890.74 rows=1 width=34) (actual time=1871.561..1872.568 rows=373 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=169890.72..169890.73 rows=1 width=26) (actual time=1871.548..1871.812 rows=3775 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 391kB
               ->  Nested Loop  (cost=1254.87..169890.71 rows=1 width=26) (actual time=7.809..1852.838 rows=3775 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..169890.20 rows=1 width=34) (actual time=7.761..1664.225 rows=7601 loops=1)
                           ->  Gather  (cost=1254.01..169889.19 rows=1 width=34) (actual time=7.735..1564.138 rows=12602 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..168889.09 rows=1 width=34) (actual time=4.786..1743.965 rows=4201 loops=3)
                                       ->  Hash Join  (cost=253.58..147470.61 rows=33207 width=34) (actual time=4.384..1108.783 rows=47148 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143759.33 rows=833502 width=8) (actual time=0.040..928.689 rows=1264432 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735973
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=4.121..4.122 rows=373 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 32kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.240..3.828 rows=373 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.043..0.046 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.189..3.629 rows=373 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=180
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.145..0.145 rows=373 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..1.03 rows=5 width=8) (actual time=0.012..0.012 rows=1 loops=141445)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..0.99 rows=15 width=8) (actual time=0.007..0.007 rows=1 loops=12602)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.024..0.024 rows=0 loops=7601)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 4.731 ms
 Execution Time: 1874.710 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=6532.22..6532.23 rows=1 width=270) (actual time=39.777..39.777 rows=0 loops=1)
   Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
   Sort Method: quicksort  Memory: 25kB
   ->  Nested Loop  (cost=1001.78..6532.21 rows=1 width=270) (actual time=39.661..39.661 rows=0 loops=1)
         Join Filter: (nation.n_nationkey = supplier.s_nationkey)
         ->  Nested Loop  (cost=1000.71..6529.75 rows=1 width=170) (actual time=39.661..39.661 rows=0 loops=1)
               ->  Nested Loop  (cost=1000.42..6529.45 rows=1 width=34) (actual time=39.660..39.661 rows=0 loops=1)
                     ->  Gather  (cost=1000.00..6347.10 rows=1 width=30) (actual time=39.660..40.852 rows=0 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Parallel Seq Scan on part  (cost=0.00..5347.00 rows=1 width=30) (actual time=33.649..33.649 rows=0 loops=3)
                                 Filter: (((p_type)::text ~~ '%MINED GOLD'::text) AND (p_size = 1))
                                 Rows Removed by Filter: 66667
                     ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..182.34 rows=1 width=14) (never executed)
                           Index Cond: (ps_partkey = part.p_partkey)
                           Filter: ((SubPlan 1) = ps_supplycost)
                           SubPlan 1
                             ->  Aggregate  (cost=43.45..43.46 rows=1 width=32) (never executed)
                                   ->  Nested Loop  (cost=0.85..43.45 rows=1 width=6) (never executed)
                                         Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                                         ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (never executed)
                                               Filter: (r_name = 'ASIA'::bpchar)
                                         ->  Nested Loop  (cost=0.85..42.33 rows=4 width=10) (never executed)
                                               ->  Nested Loop  (cost=0.71..41.71 rows=4 width=10) (never executed)
                                                     ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.42..8.50 rows=4 width=10) (never executed)
                                                           Index Cond: (ps_partkey = part.p_partkey)
                                                     ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.30 rows=1 width=8) (never executed)
                                                           Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                                               ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (never executed)
                                                     Index Cond: (n_nationkey = supplier_1.s_nationkey)
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=144) (never executed)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (never executed)
               Hash Cond: (nation.n_regionkey = region.r_regionkey)
               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (never executed)
               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (never executed)
                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (never executed)
                           Filter: (r_name = 'ASIA'::bpchar)
 Planning Time: 5.368 ms
 Execution Time: 41.512 ms
(40 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=167938.43..168464.09 rows=210263 width=44) (actual time=998.179..999.049 rows=11344 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 1271kB
   ->  Finalize GroupAggregate  (cost=115206.18..142877.76 rows=210263 width=44) (actual time=962.028..989.938 rows=11344 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=115206.18..138059.22 rows=175220 width=44) (actual time=961.991..977.560 rows=11344 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=114206.16..116834.46 rows=87610 width=44) (actual time=955.005..965.206 rows=3781 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=114206.16..114425.18 rows=87610 width=24) (actual time=954.968..955.649 rows=10045 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 1152kB
                           Worker 0:  Sort Method: quicksort  Memory: 1172kB
                           Worker 1:  Sort Method: quicksort  Memory: 1184kB
                           ->  Nested Loop  (cost=10538.76..105214.90 rows=87610 width=24) (actual time=96.784..945.526 rows=10045 loops=3)
                                 ->  Parallel Hash Join  (cost=10538.33..38654.50 rows=27047 width=12) (actual time=96.286..386.693 rows=21327 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Bitmap Heap Scan on orders  (cost=6013.95..33779.33 rows=133630 width=16) (actual time=54.000..281.811 rows=106462 loops=3)
                                             Recheck Cond: (o_orderdate < '1993-05-30'::date)
                                             Heap Blocks: exact=8676
                                             ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..5933.77 rows=320713 width=0) (actual time=48.577..48.577 rows=319385 loops=1)
                                                   Index Cond: (o_orderdate < '1993-05-30'::date)
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12650 width=4) (actual time=41.580..41.581 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12650 width=4) (actual time=0.038..35.919 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.34 rows=12 width=16) (actual time=0.025..0.025 rows=0 loops=63982)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 4
 Planning Time: 3.241 ms
 Execution Time: 1002.074 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=64308.52..64355.06 rows=5 width=24) (actual time=727.699..730.875 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=64308.52..64354.96 rows=10 width=24) (actual time=726.842..735.456 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=63308.50..63353.79 rows=5 width=24) (actual time=719.352..722.585 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=63308.50..63323.58 rows=6032 width=16) (actual time=718.521..719.715 rows=17562 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 1594kB
                     Worker 0:  Sort Method: quicksort  Memory: 1589kB
                     Worker 1:  Sort Method: quicksort  Memory: 1591kB
                     ->  Nested Loop Semi Join  (cost=1173.50..62929.73 rows=6032 width=16) (actual time=14.327..701.333 rows=17562 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=1173.07..27612.36 rows=22953 width=20) (actual time=14.240..204.262 rows=19104 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=7815
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..1159.30 rows=55087 width=0) (actual time=15.686..15.686 rows=57311 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.14 rows=5 width=4) (actual time=0.024..0.024 rows=1 loops=57311)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.634 ms
 Execution Time: 735.948 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=86385.64..86385.71 rows=25 width=136) (actual time=1665.795..1665.795 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=86340.19..86385.06 rows=25 width=136) (actual time=1664.402..1665.707 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=86340.19..86384.38 rows=50 width=136) (actual time=1664.059..1670.473 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=85340.17..85378.58 rows=25 width=136) (actual time=1655.692..1656.994 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=85340.17..85347.79 rows=3048 width=116) (actual time=1655.312..1655.476 rows=2414 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 285kB
                           Worker 0:  Sort Method: quicksort  Memory: 288kB
                           Worker 1:  Sort Method: quicksort  Memory: 282kB
                           ->  Hash Join  (cost=475.32..85163.79 rows=3048 width=116) (actual time=8.767..1651.395 rows=2414 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..84290.10 rows=76512 width=128) (actual time=0.642..1618.497 rows=61361 loops=3)
                                       ->  Nested Loop  (cost=2.89..25143.84 rows=19124 width=116) (actual time=0.515..1080.711 rows=15336 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.326..41.853 rows=10061 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.032..23.999 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.188..0.188 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.162..0.169 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.039..0.042 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.054..0.055 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.62 rows=3 width=8) (actual time=0.042..0.102 rows=2 loops=30183)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.94 rows=15 width=20) (actual time=0.030..0.033 rows=4 loops=46008)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.186..7.186 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.030..4.121 rows=10000 loops=3)
 Planning Time: 7.181 ms
 Execution Time: 1671.533 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170280.36..170280.37 rows=1 width=32) (actual time=922.300..922.300 rows=1 loops=1)
   ->  Gather  (cost=170280.13..170280.34 rows=2 width=32) (actual time=922.074..925.734 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169280.13..169280.14 rows=1 width=32) (actual time=915.995..915.996 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168764.39 rows=103148 width=12) (actual time=0.056..859.490 rows=83016 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1917389
 Planning Time: 1.598 ms
 Execution Time: 925.940 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=72940.15..73769.59 rows=5980 width=248) (actual time=2096.430..2097.575 rows=4 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=72940.15..73602.64 rows=4984 width=248) (actual time=2095.994..2103.913 rows=12 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=71940.12..72027.34 rows=2492 width=248) (actual time=2086.935..2088.073 rows=4 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=71940.12..71946.35 rows=2492 width=228) (actual time=2086.541..2086.678 rows=1930 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 328kB
                     Worker 0:  Sort Method: quicksort  Memory: 310kB
                     Worker 1:  Sort Method: quicksort  Memory: 322kB
                     ->  Hash Join  (cost=366.36..71799.54 rows=2492 width=228) (actual time=7.915..2082.406 rows=1930 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 1894
                           ->  Nested Loop  (cost=2.26..71101.74 rows=60116 width=124) (actual time=0.764..2056.455 rows=48207 loops=3)
                                 ->  Nested Loop  (cost=1.83..12907.07 rows=50000 width=108) (actual time=0.382..630.750 rows=39882 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.233..37.126 rows=3964 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.035..25.109 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.076..0.076 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.038..0.044 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.53 rows=17 width=8) (actual time=0.019..0.143 rows=10 loops=11891)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..1.11 rows=5 width=24) (actual time=0.033..0.034 rows=1 loops=119645)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=5.766..5.767 rows=789 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 56kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.121..5.378 rows=789 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.033..3.590 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.028..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.017 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.944 ms
 Execution Time: 2104.724 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=77405.33..77756.97 rows=2395 width=40) (actual time=33.983..33.984 rows=0 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=77405.33..77678.13 rows=1996 width=72) (actual time=33.982..35.340 rows=0 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=76405.31..76447.72 rows=998 width=72) (actual time=26.418..26.418 rows=0 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=76405.31..76407.80 rows=998 width=124) (actual time=26.417..26.417 rows=0 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=5.59..76355.59 rows=998 width=124) (actual time=26.349..26.349 rows=0 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=4.03..76345.97 rows=998 width=20) (actual time=26.185..26.185 rows=0 loops=3)
                                 ->  Hash Join  (cost=3.74..76042.70 rows=1002 width=20) (actual time=26.184..26.184 rows=0 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=1.28..76011.43 rows=5010 width=24) (actual time=26.183..26.184 rows=0 loops=3)
                                             ->  Nested Loop  (cost=0.86..73643.02 rows=5010 width=24) (actual time=26.183..26.183 rows=0 loops=3)
                                                   ->  Nested Loop  (cost=0.43..65860.85 rows=16553 width=20) (actual time=26.183..26.183 rows=0 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=552 width=4) (actual time=26.183..26.183 rows=0 loops=3)
                                                               Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                               Rows Removed by Filter: 66667
                                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..109.69 rows=31 width=24) (never executed)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (never executed)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (never executed)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (never executed)
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (never executed)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (never executed)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (never executed)
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (never executed)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (never executed)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.075..0.075 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.034..0.039 rows=25 loops=3)
 Planning Time: 8.097 ms
 Execution Time: 36.038 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6382.26..6464.52 rows=598 width=144) (actual time=41.045..41.045 rows=0 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6382.26..6449.07 rows=498 width=144) (actual time=41.044..42.622 rows=0 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5382.23..5391.57 rows=249 width=144) (actual time=34.001..34.001 rows=0 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5382.23..5382.85 rows=249 width=135) (actual time=34.000..34.001 rows=0 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: quicksort  Memory: 25kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Nested Loop  (cost=3.13..5372.32 rows=249 width=135) (actual time=33.916..33.916 rows=0 loops=3)
                           ->  Nested Loop  (cost=2.71..5255.26 rows=249 width=131) (actual time=33.916..33.916 rows=0 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5218.63 rows=33 width=126) (actual time=33.916..33.916 rows=0 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5216.97 rows=33 width=26) (actual time=33.915..33.915 rows=0 loops=3)
                                             ->  Nested Loop  (cost=0.42..5206.95 rows=33 width=18) (actual time=33.915..33.915 rows=0 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=33.914..33.914 rows=0 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66667
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.50 rows=4 width=14) (never executed)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (never executed)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (never executed)
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (never executed)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (never executed)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (never executed)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 7.866 ms
 Execution Time: 43.187 ms
(34 rows)

