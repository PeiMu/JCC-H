execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=306656.86..307190.15 rows=213314 width=280) (actual time=2319.373..2334.184 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7328kB
   ->  Finalize GroupAggregate  (cost=204957.36..232363.78 rows=213314 width=280) (actual time=1845.716..2261.025 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=204957.36..227919.74 rows=177762 width=280) (actual time=1845.697..2217.800 rows=40438 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=203957.34..206401.57 rows=88881 width=280) (actual time=1837.509..1996.826 rows=13479 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=203957.34..204179.54 rows=88881 width=260) (actual time=1837.462..1886.256 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 26616kB
                           Worker 0:  Sort Method: external merge  Disk: 24936kB
                           Worker 1:  Sort Method: external merge  Disk: 30688kB
                           ->  Hash Join  (cost=36118.75..185714.00 rows=88881 width=260) (actual time=1558.386..1691.186 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=36117.18..185439.58 rows=88881 width=160) (actual time=1558.237..1649.874 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Hash Join  (cost=29782.93..176661.01 rows=88881 width=16) (actual time=289.161..1408.124 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=1182500 width=16) (actual time=0.066..943.290 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Parallel Hash  (cost=29195.72..29195.72 rows=46977 width=8) (actual time=288.340..288.341 rows=38383 loops=3)
                                                   Buckets: 131072  Batches: 1  Memory Usage: 5568kB
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=2396.06..29195.72 rows=46977 width=8) (actual time=26.592..261.490 rows=38383 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=8627
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2367.88 rows=112745 width=0) (actual time=21.179..21.179 rows=115148 loops=1)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Parallel Hash  (cost=4210.00..4210.00 rows=62500 width=148) (actual time=77.099..77.099 rows=50000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3776kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=148) (actual time=0.037..36.183 rows=50000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.075..0.075 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.036..0.040 rows=25 loops=3)
 Planning Time: 4.558 ms
 Execution Time: 2364.106 ms
(39 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=13673.52..13700.19 rows=10667 width=36) (actual time=858.539..858.541 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4802.66..4802.67 rows=1 width=32) (actual time=218.784..218.784 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=10) (actual time=0.201..157.057 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.184..1.526 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.024..0.033 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.150..1.209 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.109..0.109 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.88 rows=91 width=14) (actual time=0.006..0.072 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6957.18..8157.18 rows=10667 width=36) (actual time=723.236..858.448 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6957.18..7037.18 rows=32000 width=14) (actual time=498.961..520.538 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3880kB
               ->  Nested Loop  (cost=11.81..4562.66 rows=32000 width=14) (actual time=0.359..405.765 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.307..5.594 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.034..0.043 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.257..5.071 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.226..0.226 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.88 rows=91 width=18) (actual time=0.013..0.202 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 3.295 ms
 Execution Time: 860.599 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=219572.85..220113.07 rows=7 width=27) (actual time=1674.793..1674.797 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=219572.85..220112.89 rows=14 width=27) (actual time=1662.258..1716.594 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=218572.82..219111.25 rows=7 width=27) (actual time=1654.899..1665.896 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=218572.82..218640.12 rows=26918 width=27) (actual time=1653.611..1655.234 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2139kB
                     Worker 0:  Sort Method: quicksort  Memory: 3218kB
                     Worker 1:  Sort Method: quicksort  Memory: 3093kB
                     ->  Parallel Hash Join  (cost=43820.50..216592.16 rows=26918 width=27) (actual time=1474.968..1643.783 rows=26217 loops=3)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=26918 width=15) (actual time=0.116..1068.128 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Parallel Hash  (cost=32345.00..32345.00 rows=625000 width=20) (actual time=349.865..349.866 rows=500000 loops=3)
                                 Buckets: 65536  Batches: 32  Memory Usage: 3136kB
                                 ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.041..197.399 rows=500000 loops=3)
 Planning Time: 2.303 ms
 Execution Time: 1717.220 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=100009.38..100009.40 rows=1 width=32) (actual time=366.551..366.551 rows=1 loops=1)
   ->  Gather  (cost=100009.15..100009.36 rows=2 width=64) (actual time=365.437..373.841 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=99009.15..99009.16 rows=1 width=64) (actual time=358.317..358.317 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=7827.36..98644.25 rows=20851 width=33) (actual time=339.241..351.394 rows=11824 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=1285.36..91273.52 rows=20851 width=16) (actual time=19.431..258.791 rows=11824 loops=3)
                           Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                           Heap Blocks: exact=8421
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1272.85 rows=50042 width=0) (actual time=14.209..14.209 rows=35472 loops=1)
                                 Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=4930.33..4930.33 rows=83333 width=25) (actual time=55.783..55.784 rows=66667 loops=3)
                           Buckets: 65536  Batches: 4  Memory Usage: 3584kB
                           ->  Parallel Seq Scan on part  (cost=0.00..4930.33 rows=83333 width=25) (actual time=0.055..28.640 rows=66667 loops=3)
 Planning Time: 2.581 ms
 Execution Time: 374.154 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=42420.95..42460.95 rows=16002 width=44) (actual time=1125.303..1126.505 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=40399.96..41303.53 rows=16002 width=44) (actual time=739.355..1056.579 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=40399.96..40548.67 rows=59484 width=40) (actual time=739.324..894.154 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13600kB
               ->  Gather  (cost=7682.24..35682.81 rows=59484 width=40) (actual time=63.043..330.790 rows=289514 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=6682.24..28734.41 rows=24785 width=40) (actual time=56.732..256.206 rows=96505 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=347.00..21961.67 rows=166667 width=8) (actual time=8.547..150.055 rows=266613 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 53
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.318..8.471 rows=4 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 9996
                           ->  Parallel Hash  (cost=6180.33..6180.33 rows=12392 width=40) (actual time=47.511..47.512 rows=9962 loops=3)
                                 Buckets: 32768  Batches: 1  Memory Usage: 2528kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..6180.33 rows=12392 width=40) (actual time=0.052..39.816 rows=9962 loops=3)
                                       Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                       Rows Removed by Filter: 56705
 Planning Time: 3.007 ms
 Execution Time: 1131.966 ms
(27 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=436358.16..436625.23 rows=106828 width=71) (actual time=6140.680..6140.681 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  GroupAggregate  (cost=420649.76..423053.39 rows=106828 width=71) (actual time=5632.037..6140.595 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Sort  (cost=420649.76..420916.83 rows=106828 width=44) (actual time=5502.081..5780.597 rows=1500000 loops=1)
               Sort Key: customer.c_custkey, orders.o_orderkey
               Sort Method: external merge  Disk: 82304kB
               ->  Nested Loop  (cost=275620.11..408440.49 rows=106828 width=44) (actual time=3052.187..4620.772 rows=1500000 loops=1)
                     ->  Nested Loop  (cost=275619.68..332620.88 rows=26707 width=43) (actual time=3052.113..3649.853 rows=5 loops=1)
                           ->  Hash Join  (cost=275619.26..320651.77 rows=26707 width=24) (actual time=3052.020..3649.561 rows=5 loops=1)
                                 Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                 ->  Seq Scan on orders  (cost=0.00..41095.00 rows=1500000 width=20) (actual time=0.029..436.363 rows=1500000 loops=1)
                                 ->  Hash  (cost=275285.42..275285.42 rows=26707 width=4) (actual time=3027.102..3027.102 rows=5 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 257kB
                                       ->  Finalize GroupAggregate  (cost=1000.46..275018.35 rows=26707 width=4) (actual time=210.642..3027.052 rows=5 loops=1)
                                             Group Key: lineitem_1.l_orderkey
                                             Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                             Rows Removed by Filter: 1499995
                                             ->  Gather Merge  (cost=1000.46..272614.75 rows=160240 width=36) (actual time=9.080..1599.068 rows=1500009 loops=1)
                                                   Workers Planned: 2
                                                   Workers Launched: 2
                                                   ->  Partial GroupAggregate  (cost=0.43..253119.05 rows=80120 width=36) (actual time=0.084..2122.874 rows=500003 loops=3)
                                                         Group Key: lineitem_1.l_orderkey
                                                         ->  Parallel Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..239617.55 rows=2500000 width=9) (actual time=0.060..1347.125 rows=2000000 loops=3)
                                                               Filter: (l_quantity <= '100'::numeric)
                           ->  Index Scan using customer_pkey on customer  (cost=0.42..0.45 rows=1 width=23) (actual time=0.052..0.052 rows=1 loops=5)
                                 Index Cond: (c_custkey = orders.o_custkey)
                     ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.09 rows=75 width=9) (actual time=0.050..138.540 rows=300000 loops=5)
                           Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 4.091 ms
 Execution Time: 6158.174 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=65596.19..65596.20 rows=1 width=32) (actual time=4712.730..4712.731 rows=1 loops=1)
   ->  Gather  (cost=65595.97..65596.18 rows=2 width=32) (actual time=4303.716..4720.183 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64595.97..64595.98 rows=1 width=32) (actual time=3947.001..3947.002 rows=1 loops=3)
               ->  Nested Loop  (cost=5.70..64595.45 rows=68 width=12) (actual time=873.196..3946.931 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=97 width=30) (actual time=0.823..38.331 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.70..587.17 rows=1 width=21) (actual time=59.186..59.207 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=102423 lossy=66069
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.70 rows=171 width=0) (actual time=1.784..1.784 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 3.629 ms
 Execution Time: 4720.572 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242744.31..242746.38 rows=6 width=236) (actual time=4114.657..4114.773 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=242744.31..242745.71 rows=12 width=236) (actual time=4114.605..4123.167 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=241744.28..241744.30 rows=6 width=236) (actual time=4107.839..4107.840 rows=5 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=241744.04..241744.21 rows=6 width=236) (actual time=4107.707..4107.725 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.00 rows=2449251 width=25) (actual time=0.052..958.982 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning Time: 2.089 ms
 Execution Time: 4123.765 ms
(17 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=8362.40..8362.41 rows=1 width=51) (actual time=7758.097..7758.200 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=8351.06..8362.39 rows=1 width=51) (actual time=7728.706..7747.462 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=8349.74..8360.99 rows=27 width=55) (actual time=7728.609..7746.122 rows=6401 loops=1)
               ->  HashAggregate  (cost=8349.45..8349.72 rows=27 width=4) (actual time=7728.567..7730.092 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..8349.39 rows=27 width=4) (actual time=4.134..7683.875 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6140.67 rows=20 width=4) (actual time=3.750..4.025 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=3.644..26.663 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=268.302..383.207 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.037..0.037 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.035 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.048..0.049 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.037 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning Time: 3.968 ms
 Execution Time: 7759.088 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=162913.18..162913.18 rows=1 width=34) (actual time=3338.459..3338.573 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=162913.15..162913.17 rows=1 width=34) (actual time=3321.902..3330.292 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=162913.15..162913.15 rows=1 width=26) (actual time=3321.883..3324.266 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop  (cost=1254.87..162913.14 rows=1 width=26) (actual time=4.456..3182.024 rows=33699 loops=1)
                     ->  Nested Loop Semi Join  (cost=1254.44..162912.63 rows=1 width=34) (actual time=4.007..2557.370 rows=71588 loops=1)
                           ->  Gather  (cost=1254.01..162910.44 rows=1 width=34) (actual time=3.984..2084.022 rows=71588 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=254.01..161910.34 rows=1 width=34) (actual time=3.025..2783.897 rows=23863 loops=3)
                                       ->  Hash Join  (cost=253.58..147485.91 rows=33333 width=34) (actual time=2.916..1221.437 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.00 rows=833333 width=8) (actual time=0.040..976.910 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.748..2.749 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.281..2.008 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.037..0.040 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.236..1.660 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.186..0.186 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using lineitem_pkey on lineitem l3  (cost=0.43..2.38 rows=25 width=8) (actual time=0.006..0.006 rows=1 loops=718172)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using lineitem_pkey on lineitem l2  (cost=0.43..2.19 rows=75 width=8) (actual time=0.006..0.006 rows=1 loops=71588)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 0
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.008..0.008 rows=0 loops=71588)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 5.313 ms
 Execution Time: 3339.876 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=235218.25..235836.86 rows=247445 width=44) (actual time=985.422..988.348 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=172873.97..205438.70 rows=247445 width=44) (actual time=894.690..965.681 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=172873.97..199768.09 rows=206204 width=44) (actual time=894.679..931.035 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=171873.95..174967.01 rows=103102 width=44) (actual time=887.316..913.320 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=171873.95..172131.70 rows=103102 width=24) (actual time=887.274..889.104 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2814kB
                           Worker 0:  Sort Method: quicksort  Memory: 2824kB
                           Worker 1:  Sort Method: quicksort  Memory: 2832kB
                           ->  Nested Loop  (cost=4523.08..161171.29 rows=103102 width=24) (actual time=42.158..866.017 rows=26304 loops=3)
                                 ->  Parallel Hash Join  (cost=4522.65..38837.51 rows=31067 width=12) (actual time=41.949..275.270 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=155181 width=16) (actual time=0.042..181.259 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Parallel Hash  (cost=4366.25..4366.25 rows=12512 width=4) (actual time=41.247..41.248 rows=9983 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1472kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4366.25 rows=12512 width=4) (actual time=0.050..35.840 rows=9983 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 40017
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.32 rows=62 width=16) (actual time=0.022..0.022 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning Time: 3.348 ms
 Execution Time: 991.360 ms
(32 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=76440.92..76470.78 rows=5 width=24) (actual time=1276.468..1286.371 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=76440.92..76470.68 rows=10 width=24) (actual time=1273.922..1294.085 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=75440.90..75469.50 rows=5 width=24) (actual time=1266.419..1276.198 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=75440.90..75450.41 rows=3807 width=16) (actual time=1263.926..1267.564 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3938kB
                     Worker 0:  Sort Method: quicksort  Memory: 3840kB
                     Worker 1:  Sort Method: quicksort  Memory: 3914kB
                     ->  Nested Loop Semi Join  (cost=3638.27..75214.49 rows=3807 width=16) (actual time=29.025..1223.223 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3637.83..30801.98 rows=71277 width=20) (actual time=28.898..269.351 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8837
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3595.07 rows=171064 width=0) (actual time=29.590..29.590 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..4.95 rows=25 width=4) (actual time=0.016..0.016 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 2.789 ms
 Execution Time: 1294.903 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                  QUERY PLAN                                                                                   
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=123179.03..123179.09 rows=25 width=136) (actual time=1788.491..1788.492 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=123016.20..123178.45 rows=25 width=136) (actual time=1788.250..1788.428 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=123016.20..123177.76 rows=50 width=136) (actual time=1788.225..1796.630 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=122016.18..122171.96 rows=25 width=136) (actual time=1748.558..1748.654 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=122016.18..122047.27 rows=12438 width=116) (actual time=1719.963..1724.506 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3328kB
                           Worker 0:  Sort Method: quicksort  Memory: 3263kB
                           Worker 1:  Sort Method: external merge  Disk: 2704kB
                           ->  Hash Join  (cost=475.32..121170.24 rows=12438 width=116) (actual time=8.581..1686.464 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..120296.81 rows=76461 width=128) (actual time=0.900..1632.413 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29612.59 rows=19115 width=116) (actual time=0.744..1060.531 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.296..42.080 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.037..24.467 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.177..0.177 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.154..0.161 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.039..0.042 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.056..0.056 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.028..0.029 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.046..0.100 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..3.99 rows=75 width=20) (actual time=0.029..0.034 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.386..7.386 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.032..4.524 rows=10000 loops=3)
 Planning Time: 7.179 ms
 Execution Time: 1797.670 ms
(43 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=170334.85..170334.86 rows=1 width=32) (actual time=944.001..944.001 rows=1 loops=1)
   ->  Gather  (cost=170334.63..170334.84 rows=2 width=32) (actual time=943.777..948.709 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=169334.63..169334.64 rows=1 width=32) (actual time=937.473..937.474 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.00 rows=112125 width=12) (actual time=0.059..883.906 rows=89289 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Filter: 1910711
 Planning Time: 1.705 ms
 Execution Time: 948.931 ms
(10 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=152554.41..153468.43 rows=6591 width=248) (actual time=7806.584..7806.584 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=152554.41..153284.44 rows=5492 width=248) (actual time=7806.572..7814.442 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=151554.39..151650.50 rows=2746 width=248) (actual time=7413.497..7413.497 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=151554.39..151561.25 rows=2746 width=228) (actual time=7387.749..7396.037 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: external merge  Disk: 6480kB
                     Worker 0:  Sort Method: quicksort  Memory: 25kB
                     Worker 1:  Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..151397.55 rows=2746 width=228) (actual time=5461.917..7366.214 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..150666.64 rows=65994 width=124) (actual time=0.739..7170.224 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14969.58 rows=50000 width=108) (actual time=0.262..2046.058 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.172..47.984 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.035..24.757 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.056..0.057 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.030..0.035 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.012..0.105 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.43..2.46 rows=25 width=24) (actual time=0.025..0.026 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=7.323..7.323 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.114..5.963 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.031..3.630 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.028..0.028 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.011..0.016 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 5.940 ms
 Execution Time: 7817.103 ms
(44 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=160691.10..161039.18 rows=2343 width=40) (actual time=7596.942..7596.952 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=160691.10..160961.71 rows=1980 width=72) (actual time=7581.651..7604.849 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=159691.07..159733.15 rows=990 width=72) (actual time=7573.605..7588.826 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=159691.07..159693.55 rows=990 width=124) (actual time=7558.447..7560.390 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3123kB
                     Worker 0:  Sort Method: quicksort  Memory: 3159kB
                     Worker 1:  Sort Method: quicksort  Memory: 3136kB
                     ->  Hash Join  (cost=5150.68..159641.81 rows=990 width=124) (actual time=28.004..7529.829 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=5149.11..159632.26 rows=990 width=20) (actual time=27.853..7497.075 rows=30346 loops=3)
                                 ->  Hash Join  (cost=5148.83..159332.62 rows=990 width=20) (actual time=27.770..7400.081 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=5146.36..159301.69 rows=4951 width=24) (actual time=27.346..7329.597 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=5145.94..156960.33 rows=4951 width=24) (actual time=27.243..5662.393 rows=351414 loops=3)
                                                   ->  Parallel Hash Join  (cost=5145.52..149232.16 rows=16438 width=20) (actual time=27.160..1298.992 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.00 rows=2500000 width=24) (actual time=0.030..706.345 rows=2000000 loops=3)
                                                         ->  Parallel Hash  (cost=5138.67..5138.67 rows=548 width=4) (actual time=26.738..26.738 rows=446 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 112kB
                                                               ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=548 width=4) (actual time=0.110..26.182 rows=446 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 66220
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.005..0.005 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.140..0.140 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.118..0.125 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.052..0.052 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.042..0.042 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.069..0.069 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.028..0.033 rows=25 loops=3)
 Planning Time: 8.349 ms
 Execution Time: 7605.948 ms
(50 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6384.54..6467.13 rows=600 width=144) (actual time=10008.294..11504.086 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6384.54..6451.63 rows=500 width=144) (actual time=9965.651..11504.149 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5384.52..5393.90 rows=250 width=144) (actual time=8581.209..9633.286 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5384.52..5385.15 rows=250 width=135) (actual time=8536.515..8840.535 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 62752kB
                     Worker 0:  Sort Method: external merge  Disk: 73752kB
                     Worker 1:  Sort Method: external merge  Disk: 52408kB
                     ->  Nested Loop  (cost=3.13..5374.56 rows=250 width=135) (actual time=21.054..7594.517 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5257.03 rows=250 width=131) (actual time=20.957..3499.618 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5220.40 rows=33 width=126) (actual time=5.975..354.098 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5218.74 rows=33 width=26) (actual time=5.797..321.744 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5208.71 rows=33 width=18) (actual time=5.701..97.549 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=8 width=4) (actual time=5.577..35.478 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.078..7.184 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.072..0.072 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.041..0.045 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.005..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 9.438 ms
 Execution Time: 11519.458 ms
(35 rows)

