execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=333357.08..333918.14 rows=224424 width=280) (actual time=3230.505..3246.198 rows=39239 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 7320kB
   ->  Finalize GroupAggregate  (cost=226273.65..255107.42 rows=224424 width=280) (actual time=2786.850..3161.231 rows=39239 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=226273.65..250431.92 rows=187020 width=280) (actual time=2786.841..3073.731 rows=60418 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=225273.62..227845.15 rows=93510 width=280) (actual time=2779.307..2946.211 rows=20139 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=225273.62..225507.40 rows=93510 width=260) (actual time=2779.286..2827.412 rows=144448 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 27312kB
                           ->  Hash Join  (cost=42559.22..206045.05 rows=93510 width=260) (actual time=1095.482..2604.447 rows=144448 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=42557.66..205756.41 rows=93510 width=160) (actual time=1095.380..2560.355 rows=144448 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=32374.66..191190.94 rows=93510 width=16) (actual time=869.211..2215.802 rows=144448 loops=3)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=1176347 width=16) (actual time=0.045..1035.488 rows=942468 loops=3)
                                                   Filter: (l_returnflag = 'R'::bpchar)
                                                   Rows Removed by Filter: 1057532
                                             ->  Hash  (cost=30418.19..30418.19 rows=119238 width=8) (actual time=866.802..866.802 rows=115148 loops=3)
                                                   Buckets: 131072  Batches: 2  Memory Usage: 3266kB
                                                   ->  Bitmap Heap Scan on orders  (cost=2534.62..30418.19 rows=119238 width=8) (actual time=26.148..812.086 rows=115148 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                                         Heap Blocks: exact=25846
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..2504.81 rows=119238 width=0) (actual time=21.784..21.784 rows=115148 loops=3)
                                                               Index Cond: ((o_orderdate >= '1992-05-26'::date) AND (o_orderdate < '1992-05-29'::date))
                                       ->  Hash  (cost=5085.00..5085.00 rows=150000 width=148) (actual time=225.305..225.305 rows=150000 loops=3)
                                             Buckets: 32768  Batches: 8  Memory Usage: 3676kB
                                             ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=148) (actual time=0.033..120.249 rows=150000 loops=3)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.059..0.059 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.032..0.037 rows=25 loops=3)
 Planning time: 4.475 ms
 Execution time: 3256.986 ms
(37 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=15296.01..15376.01 rows=32000 width=36) (actual time=920.106..920.107 rows=20 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 25kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=4813.48..4813.49 rows=1 width=32) (actual time=212.473..212.474 rows=1 loops=1)
           ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=10) (actual time=0.304..145.763 rows=152080 loops=1)
                 ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.288..2.476 rows=1802 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.019..0.025 rows=1 loops=1)
                             Filter: (n_name = 'CHINA'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=11.38..243.27 rows=400 width=8) (actual time=0.261..2.139 rows=1802 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=222
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.222..0.222 rows=1802 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.42..9.89 rows=92 width=14) (actual time=0.006..0.066 rows=84 loops=1802)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=6968.00..8088.00 rows=32000 width=36) (actual time=792.845..920.010 rows=20 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 79992
         ->  Sort  (cost=6968.00..7048.00 rows=32000 width=14) (actual time=575.218..595.359 rows=152080 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 3872kB
               ->  Nested Loop  (cost=11.81..4573.47 rows=32000 width=14) (actual time=0.381..455.036 rows=152080 loops=1)
                     ->  Nested Loop  (cost=11.38..248.58 rows=400 width=4) (actual time=0.326..5.821 rows=1802 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.036..0.042 rows=1 loops=1)
                                 Filter: (n_name = 'CHINA'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=8) (actual time=0.275..5.311 rows=1802 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=222
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.247..0.247 rows=1802 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.42..9.89 rows=92 width=18) (actual time=0.013..0.229 rows=84 loops=1802)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning time: 3.574 ms
 Execution time: 921.904 ms
(38 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                    QUERY PLAN                                                                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=233931.40..234465.74 rows=7 width=27) (actual time=1643.937..1643.939 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=233931.40..234465.57 rows=14 width=27) (actual time=1634.048..1651.827 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=232931.38..233463.93 rows=7 width=27) (actual time=1627.766..1637.491 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=232931.38..232997.94 rows=26624 width=27) (actual time=1626.619..1628.332 rows=26217 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 2829kB
                     ->  Nested Loop  (cost=0.43..230974.46 rows=26624 width=27) (actual time=0.216..1606.123 rows=26217 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..168774.64 rows=26624 width=15) (actual time=0.155..1197.944 rows=26217 loops=3)
                                 Filter: ((l_shipmode = ANY ('{"REG AIR",FOB}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 1973783
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..2.34 rows=1 width=20) (actual time=0.014..0.014 rows=1 loops=78651)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 2.529 ms
 Execution time: 1652.458 ms
(18 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/14.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=93304.63..93304.65 rows=1 width=32) (actual time=872.096..872.096 rows=1 loops=1)
   ->  Hash Join  (cost=10977.10..92615.44 rows=39382 width=33) (actual time=161.508..819.684 rows=35472 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         ->  Bitmap Heap Scan on lineitem  (cost=1012.10..80793.07 rows=39382 width=16) (actual time=16.931..604.813 rows=35472 loops=1)
               Recheck Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
               Heap Blocks: exact=25366
               ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..1002.25 rows=39382 width=0) (actual time=12.648..12.648 rows=35472 loops=1)
                     Index Cond: ((l_shipdate >= '1993-05-01'::date) AND (l_shipdate < '1993-06-01 00:00:00'::timestamp without time zone))
         ->  Hash  (cost=6097.00..6097.00 rows=200000 width=25) (actual time=143.491..143.491 rows=200000 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 3416kB
               ->  Seq Scan on part  (cost=0.00..6097.00 rows=200000 width=25) (actual time=0.041..78.488 rows=200000 loops=1)
 Planning time: 2.714 ms
 Execution time: 872.456 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/16.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=44980.13..45019.95 rows=15929 width=44) (actual time=2066.379..2067.659 rows=18324 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2215kB
   ->  GroupAggregate  (cost=42973.27..43868.33 rows=15929 width=44) (actual time=1669.230..1999.527 rows=18324 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=42973.27..43120.42 rows=58862 width=40) (actual time=1669.207..1824.933 rows=289514 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 13592kB
               ->  Hash Join  (cost=9811.89..38309.91 rows=58862 width=40) (actual time=131.885..685.627 rows=289514 loops=1)
                     Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                     ->  Seq Scan on partsupp  (cost=347.00..27795.00 rows=400000 width=8) (actual time=6.529..401.015 rows=799840 loops=1)
                           Filter: (NOT (hashed SubPlan 1))
                           Rows Removed by Filter: 160
                           SubPlan 1
                             ->  Seq Scan on supplier  (cost=0.00..347.00 rows=1 width=4) (actual time=0.249..6.486 rows=4 loops=1)
                                   Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                   Rows Removed by Filter: 9996
                     ->  Hash  (cost=9097.00..9097.00 rows=29431 width=40) (actual time=124.793..124.793 rows=29886 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 2418kB
                           ->  Seq Scan on part  (cost=0.00..9097.00 rows=29431 width=40) (actual time=0.037..109.765 rows=29886 loops=1)
                                 Filter: ((p_brand <> 'Brand#51'::bpchar) AND ((p_type)::text !~~ 'SMALL POLISHED%'::text) AND (p_size = ANY ('{44,48,49,10,2,18,35,1}'::integer[])))
                                 Rows Removed by Filter: 170114
 Planning time: 2.865 ms
 Execution time: 2072.136 ms
(24 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/17.sql_explained.sql:25: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=571617.37..572411.69 rows=317728 width=71) (actual time=11883.755..11883.755 rows=5 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=489387.58..529547.11 rows=317728 width=71) (actual time=11763.627..11883.684 rows=5 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=489387.58..522927.77 rows=264774 width=71) (actual time=11643.308..11883.803 rows=5 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=488387.55..491366.26 rows=132387 width=71) (actual time=11216.279..11296.398 rows=2 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=488387.55..488718.52 rows=132387 width=44) (actual time=11095.116..11173.211 rows=500000 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: external sort  Disk: 49320kB
                           ->  Nested Loop  (cost=324275.52..473051.12 rows=132387 width=44) (actual time=10125.355..10828.460 rows=500000 loops=3)
                                 ->  Hash Join  (cost=324275.09..378183.38 rows=33096 width=43) (actual time=10125.238..10479.476 rows=2 loops=3)
                                       Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                       ->  Hash Join  (cost=7839.00..50029.67 rows=625000 width=39) (actual time=157.536..679.479 rows=500000 loops=3)
                                             Hash Cond: (orders.o_custkey = customer.c_custkey)
                                             ->  Parallel Seq Scan on orders  (cost=0.00..32345.00 rows=625000 width=20) (actual time=0.046..235.196 rows=500000 loops=3)
                                             ->  Hash  (cost=5085.00..5085.00 rows=150000 width=23) (actual time=156.011..156.011 rows=150000 loops=3)
                                                   Buckets: 65536  Batches: 4  Memory Usage: 2579kB
                                                   ->  Seq Scan on customer  (cost=0.00..5085.00 rows=150000 width=23) (actual time=0.030..108.105 rows=150000 loops=3)
                                       ->  Hash  (cost=315132.20..315132.20 rows=79431 width=4) (actual time=9636.961..9636.961 rows=5 loops=3)
                                             Buckets: 131072  Batches: 2  Memory Usage: 1025kB
                                             ->  GroupAggregate  (cost=0.43..314337.89 rows=79431 width=4) (actual time=616.748..9636.715 rows=5 loops=3)
                                                   Group Key: lineitem_1.l_orderkey
                                                   Filter: (sum(lineitem_1.l_quantity) > '815'::numeric)
                                                   Rows Removed by Filter: 1499995
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.43..283344.66 rows=6000068 width=9) (actual time=0.051..7532.709 rows=6000000 loops=3)
                                                         Filter: (l_quantity <= '100'::numeric)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.11 rows=76 width=9) (actual time=0.097..153.194 rows=300000 loops=5)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning time: 4.114 ms
 Execution time: 11894.396 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/19.sql_explained.sql
SET

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=65993.77..65993.78 rows=1 width=32) (actual time=6320.743..6320.743 rows=1 loops=1)
   ->  Gather  (cost=65993.55..65993.76 rows=2 width=32) (actual time=3503.560..6331.695 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=64993.55..64993.56 rows=1 width=32) (actual time=5374.496..5374.496 rows=1 loops=3)
               ->  Nested Loop  (cost=5.68..64993.01 rows=71 width=12) (actual time=1052.827..5374.446 rows=6 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..7638.67 rows=99 width=30) (actual time=0.334..35.322 rows=66 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#00'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#55'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 66601
                     ->  Bitmap Heap Scan on lineitem  (cost=5.68..579.33 rows=1 width=21) (actual time=80.860..80.885 rows=0 loops=198)
                           Recheck Cond: (l_partkey = part.p_partkey)
                           Rows Removed by Index Recheck: 42392
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric)) OR ((l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric))) AND (((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '7'::numeric) AND (l_quantity <= '17'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#00'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#55'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '43'::numeric) AND (l_quantity <= '53'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 12858
                           Heap Blocks: exact=72947 lossy=33034
                           ->  Bitmap Index Scan on idx_lineitem_part_supp  (cost=0.00..5.68 rows=169 width=0) (actual time=1.863..1.863 rows=12858 loops=198)
                                 Index Cond: (l_partkey = part.p_partkey)
 Planning time: 3.477 ms
 Execution time: 6332.138 ms
(19 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/1.sql_explained.sql
SET
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=242625.81..242626.52 rows=6 width=236) (actual time=4269.671..4269.757 rows=5 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Sort  (cost=242625.81..242625.84 rows=12 width=236) (actual time=4269.593..4269.595 rows=15 loops=1)
         Sort Key: l_returnflag, l_linestatus
         Sort Method: quicksort  Memory: 32kB
         ->  Gather  (cost=242624.23..242625.60 rows=12 width=236) (actual time=4269.269..4277.239 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial HashAggregate  (cost=241624.23..241624.40 rows=6 width=236) (actual time=4263.598..4263.621 rows=5 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..143774.35 rows=2446247 width=25) (actual time=0.041..1144.942 rows=1958392 loops=3)
                           Filter: (l_shipdate <= '1998-09-08 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 41608
 Planning time: 2.089 ms
 Execution time: 4277.891 ms
(15 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/20.sql_explained.sql
SET
                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=9806.82..9806.82 rows=2 width=51) (actual time=7644.019..7644.125 rows=1600 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 235kB
   ->  Hash Join  (cost=9788.09..9806.81 rows=2 width=51) (actual time=7614.610..7633.636 rows=1600 loops=1)
         Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
         ->  Nested Loop  (cost=9786.76..9805.34 rows=44 width=55) (actual time=7614.529..7632.354 rows=6401 loops=1)
               ->  HashAggregate  (cost=9786.48..9786.92 rows=44 width=4) (actual time=7614.477..7615.894 rows=6401 loops=1)
                     Group Key: partsupp.ps_suppkey
                     ->  Nested Loop  (cost=1000.42..9786.37 rows=44 width=4) (actual time=4.459..7571.731 rows=96005 loops=1)
                           ->  Gather  (cost=1000.00..6141.97 rows=33 width=4) (actual time=3.973..4.219 rows=20 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=4.078..30.242 rows=7 loops=3)
                                       Filter: ((p_name)::text ~~ 'shiny mi%'::text)
                                       Rows Removed by Filter: 66660
                           ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..110.40 rows=4 width=8) (actual time=258.733..377.612 rows=4800 loops=20)
                                 Index Cond: (ps_partkey = part.p_partkey)
                                 Filter: ((ps_availqty)::numeric > (SubPlan 1))
                                 Rows Removed by Filter: 5200
                                 SubPlan 1
                                   ->  Aggregate  (cost=8.46..8.47 rows=1 width=32) (actual time=0.036..0.036 rows=1 loops=200000)
                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..8.46 rows=1 width=5) (actual time=0.008..0.034 rows=3 loops=200000)
                                               Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                               Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                               Rows Removed by Filter: 10
               ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.42 rows=1 width=59) (actual time=0.002..0.002 rows=1 loops=6401)
                     Index Cond: (s_suppkey = partsupp.ps_suppkey)
         ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.033..0.037 rows=1 loops=1)
                     Filter: (n_name = 'EGYPT'::bpchar)
                     Rows Removed by Filter: 24
 Planning time: 3.744 ms
 Execution time: 7644.817 ms
(34 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=214347.12..214347.13 rows=1 width=34) (actual time=4833.751..4833.870 rows=1798 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 189kB
   ->  GroupAggregate  (cost=214347.09..214347.11 rows=1 width=34) (actual time=4817.641..4825.799 rows=1798 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=214347.09..214347.10 rows=1 width=26) (actual time=4817.631..4820.095 rows=33699 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 3578kB
               ->  Nested Loop Anti Join  (cost=1254.87..214347.08 rows=1 width=26) (actual time=4.332..4680.107 rows=33699 loops=1)
                     ->  Gather  (cost=1254.44..214344.43 rows=1 width=34) (actual time=3.733..2309.717 rows=436281 loops=1)
                           Workers Planned: 2
                           Workers Launched: 2
                           ->  Nested Loop Semi Join  (cost=254.44..213344.33 rows=1 width=34) (actual time=2.960..3729.692 rows=145427 loops=3)
                                 Join Filter: (orders.o_orderkey = l2.l_orderkey)
                                 ->  Nested Loop  (cost=254.01..164417.36 rows=15481 width=38) (actual time=2.919..2722.630 rows=145427 loops=3)
                                       ->  Hash Join  (cost=253.58..147486.31 rows=33334 width=34) (actual time=2.820..1366.979 rows=239391 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..143774.35 rows=833343 width=8) (actual time=0.040..1115.597 rows=1264448 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 735552
                                             ->  Hash  (cost=248.58..248.58 rows=400 width=30) (actual time=2.677..2.677 rows=1801 loops=3)
                                                   Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 129kB
                                                   ->  Nested Loop  (cost=11.38..248.58 rows=400 width=30) (actual time=0.263..1.982 rows=1801 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.028..0.031 rows=1 loops=3)
                                                               Filter: (n_name = 'MOROCCO'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=11.38..243.27 rows=400 width=34) (actual time=0.222..1.609 rows=1801 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=222
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..11.29 rows=400 width=0) (actual time=0.180..0.181 rows=1801 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=718172)
                                             Index Cond: (o_orderkey = l1.l_orderkey)
                                             Filter: (o_orderstatus = 'F'::bpchar)
                                             Rows Removed by Filter: 0
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..2.21 rows=76 width=8) (actual time=0.006..0.006 rows=1 loops=436281)
                                       Index Cond: (l_orderkey = l1.l_orderkey)
                                       Filter: (l_suppkey <> l1.l_suppkey)
                                       Rows Removed by Filter: 0
                     ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..2.40 rows=25 width=8) (actual time=0.005..0.005 rows=1 loops=436281)
                           Index Cond: (l_orderkey = l1.l_orderkey)
                           Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                           Rows Removed by Filter: 1
 Planning time: 5.291 ms
 Execution time: 4834.938 ms
(45 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql
SET
psql:/home/pei/Project/benchmarks/JCC-H/out/skinner_explained/2.sql_explained.sql:51: ERROR:  canceling statement due to statement timeout
execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/3.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=241366.98..241999.40 rows=252967 width=44) (actual time=1142.148..1145.219 rows=27923 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 2950kB
   ->  Finalize GroupAggregate  (cost=177589.48..210880.98 rows=252967 width=44) (actual time=1022.607..1121.618 rows=27923 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=177589.48..205083.82 rows=210806 width=44) (actual time=1022.576..1082.512 rows=27923 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=176589.46..179751.55 rows=105403 width=44) (actual time=1016.370..1045.283 rows=9308 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=176589.46..176852.97 rows=105403 width=24) (actual time=1016.346..1018.343 rows=26304 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 2799kB
                           ->  Nested Loop  (cost=5837.87..165632.92 rows=105403 width=24) (actual time=116.374..995.824 rows=26304 loops=3)
                                 ->  Hash Join  (cost=5837.44..40160.02 rows=31830 width=12) (actual time=116.208..373.526 rows=25020 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..33907.50 rows=158123 width=16) (actual time=0.039..211.173 rows=125418 loops=3)
                                             Filter: (o_orderdate < '1993-05-30'::date)
                                             Rows Removed by Filter: 374582
                                       ->  Hash  (cost=5460.00..5460.00 rows=30195 width=4) (actual time=115.572..115.572 rows=29949 loops=3)
                                             Buckets: 32768  Batches: 1  Memory Usage: 1309kB
                                             ->  Seq Scan on customer  (cost=0.00..5460.00 rows=30195 width=4) (actual time=0.037..105.840 rows=29949 loops=3)
                                                   Filter: (c_mktsegment = 'MACHINERY'::bpchar)
                                                   Rows Removed by Filter: 120051
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..3.31 rows=63 width=16) (actual time=0.023..0.024 rows=1 loops=75059)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1993-05-30'::date)
                                       Rows Removed by Filter: 2
 Planning time: 3.302 ms
 Execution time: 1147.479 ms
(30 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=75878.93..75908.12 rows=5 width=24) (actual time=1206.812..1216.256 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=75878.93..75908.02 rows=10 width=24) (actual time=1204.369..1222.059 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=74878.90..74906.84 rows=5 width=24) (actual time=1197.023..1206.580 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=74878.90..74888.20 rows=3718 width=16) (actual time=1194.585..1198.327 rows=54004 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3889kB
                     ->  Nested Loop Semi Join  (cost=3580.31..74658.42 rows=3718 width=16) (actual time=28.569..1153.371 rows=54004 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3579.88..30728.21 rows=70222 width=20) (actual time=28.489..267.410 rows=56796 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                                 Heap Blocks: exact=8656
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3537.75 rows=168532 width=0) (actual time=28.286..28.286 rows=170387 loops=1)
                                       Index Cond: ((o_orderdate >= '1994-05-01'::date) AND (o_orderdate < '1994-08-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..5.01 rows=25 width=4) (actual time=0.015..0.015 rows=1 loops=170387)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning time: 2.732 ms
 Execution time: 1222.767 ms
(22 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=122759.01..122759.07 rows=25 width=136) (actual time=2215.056..2215.057 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=122599.08..122758.43 rows=25 width=136) (actual time=2214.965..2215.013 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=122599.08..122757.74 rows=50 width=136) (actual time=2214.925..2225.552 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=121599.06..121751.95 rows=25 width=136) (actual time=2186.123..2186.164 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=121599.06..121629.58 rows=12206 width=116) (actual time=2158.384..2162.780 rows=40104 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 3231kB
                           ->  Hash Join  (cost=475.32..120770.56 rows=12206 width=116) (actual time=8.545..2125.487 rows=40104 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.32..119904.75 rows=75010 width=128) (actual time=0.895..2072.394 rows=145789 loops=3)
                                       ->  Nested Loop  (cost=2.89..29610.92 rows=18752 width=116) (actual time=0.751..1389.489 rows=15263 loops=3)
                                             ->  Hash Join  (cost=2.46..4571.84 rows=12500 width=116) (actual time=0.246..46.824 rows=10000 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..30.569 rows=50000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.140..0.140 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.123..0.129 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.036..0.038 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.047..0.047 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.027..0.029 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.95 rows=5 width=8) (actual time=0.062..0.133 rows=2 loops=30000)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..4.06 rows=76 width=20) (actual time=0.036..0.041 rows=10 loops=45790)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=322.00..322.00 rows=10000 width=8) (actual time=7.358..7.358 rows=10000 loops=3)
                                       Buckets: 16384  Batches: 1  Memory Usage: 519kB
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.030..4.692 rows=10000 loops=3)
 Planning time: 7.035 ms
 Execution time: 2226.454 ms
(41 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=148804.85..148804.86 rows=1 width=32) (actual time=1223.426..1223.426 rows=1 loops=1)
   ->  Gather  (cost=148804.63..148804.84 rows=2 width=32) (actual time=1222.434..1230.813 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=147804.63..147804.64 rows=1 width=32) (actual time=1216.836..1216.836 rows=1 loops=3)
               ->  Parallel Bitmap Heap Scan on lineitem  (cost=32268.61..147256.99 rows=109528 width=12) (actual time=250.796..1142.460 rows=89289 loops=3)
                     Recheck Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
                     Rows Removed by Index Recheck: 547014
                     Heap Blocks: exact=14293 lossy=11297
                     ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..32202.90 rows=262867 width=0) (actual time=245.601..245.601 rows=267868 loops=1)
                           Index Cond: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.03) AND (l_discount <= 0.05) AND (l_quantity < '100'::numeric))
 Planning time: 1.664 ms
 Execution time: 1231.059 ms
(13 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/7.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=153670.56..154570.92 rows=6492 width=248) (actual time=9572.626..9572.626 rows=1 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=153670.56..154389.68 rows=5410 width=248) (actual time=9572.588..9585.092 rows=1 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=152670.54..152765.21 rows=2705 width=248) (actual time=9305.029..9305.029 rows=0 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=152670.54..152677.30 rows=2705 width=228) (actual time=9283.024..9287.871 rows=25067 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=366.36..152516.33 rows=2705 width=228) (actual time=6637.536..9253.305 rows=25067 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'UNITED STATES'::bpchar)) OR ((n1.n_name = 'UNITED STATES'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)))
                           Rows Removed by Join Filter: 158772
                           ->  Nested Loop  (cost=2.26..151790.98 rows=64995 width=124) (actual time=0.840..9079.793 rows=269530 loops=3)
                                 ->  Nested Loop  (cost=1.83..14968.91 rows=50000 width=108) (actual time=0.266..2694.424 rows=184846 loops=3)
                                       ->  Hash Join  (cost=1.40..4403.27 rows=5000 width=108) (actual time=0.161..52.351 rows=18001 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..4210.00 rows=62500 width=8) (actual time=0.036..31.169 rows=50000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.057..0.057 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.038..0.043 rows=2 loops=3)
                                                         Filter: ((n_name = 'UNITED STATES'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.79 rows=32 width=8) (actual time=0.015..0.141 rows=10 loops=54002)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.43..2.49 rows=25 width=24) (actual time=0.032..0.033 rows=1 loops=554538)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1993-01-01'::date) AND (l_shipdate <= '1994-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=354.10..354.10 rows=800 width=108) (actual time=6.806..6.806 rows=3602 loops=3)
                                 Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 251kB
                                 ->  Hash Join  (cost=1.40..354.10 rows=800 width=108) (actual time=0.108..5.530 rows=3602 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..322.00 rows=10000 width=8) (actual time=0.030..3.255 rows=10000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.030..0.030 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.009..0.014 rows=2 loops=3)
                                                   Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'UNITED STATES'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning time: 6.345 ms
 Execution time: 9585.668 ms
(42 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/8.sql_explained.sql
SET
                                                                                        QUERY PLAN                                                                                         
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=162213.08..162560.65 rows=2347 width=40) (actual time=7481.661..7481.668 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=162213.08..162483.15 rows=1976 width=72) (actual time=7466.251..7489.860 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=161213.05..161255.04 rows=988 width=72) (actual time=7459.475..7474.584 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=161213.05..161215.52 rows=988 width=124) (actual time=7444.385..7446.423 rows=30346 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 3139kB
                     ->  Hash Join  (cost=6618.72..161163.91 rows=988 width=124) (actual time=119.220..7416.044 rows=30346 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=6617.16..161154.37 rows=988 width=20) (actual time=119.087..7386.991 rows=30346 loops=3)
                                 ->  Hash Join  (cost=6616.87..160855.33 rows=988 width=20) (actual time=119.026..7295.869 rows=30346 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=6614.41..160824.46 rows=4939 width=24) (actual time=118.645..7230.695 rows=351414 loops=3)
                                             ->  Nested Loop  (cost=6613.99..158487.03 rows=4939 width=24) (actual time=118.543..5647.280 rows=351414 loops=3)
                                                   ->  Hash Join  (cost=6613.56..150700.56 rows=16562 width=20) (actual time=118.467..1432.271 rows=847578 loops=3)
                                                         Hash Cond: (lineitem.l_partkey = part.p_partkey)
                                                         ->  Parallel Seq Scan on lineitem  (cost=0.00..137524.28 rows=2500028 width=24) (actual time=0.035..803.421 rows=2000000 loops=3)
                                                         ->  Hash  (cost=6597.00..6597.00 rows=1325 width=4) (actual time=118.374..118.374 rows=1339 loops=3)
                                                               Buckets: 2048  Batches: 1  Memory Usage: 64kB
                                                               ->  Seq Scan on part  (cost=0.00..6597.00 rows=1325 width=4) (actual time=0.071..117.225 rows=1339 loops=3)
                                                                     Filter: ((p_type)::text = 'SHINY MINED GOLD'::text)
                                                                     Rows Removed by Filter: 198661
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=12) (actual time=0.004..0.004 rows=0 loops=2542733)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1993-01-01'::date) AND (o_orderdate <= '1994-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=1054242)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.118..0.118 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.095..0.102 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.007..0.010 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.049..0.049 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.037..0.038 rows=1 loops=3)
                                                               Filter: (r_name = 'MIDDLE EAST'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=91038)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.061..0.061 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.035..0.040 rows=25 loops=3)
 Planning time: 8.216 ms
 Execution time: 7490.838 ms
(48 rows)

execute /home/pei/Project/benchmarks/JCC-H/out/skinner_explained/9.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=6552.35..6688.48 rows=990 width=144) (actual time=9935.180..11076.777 rows=25 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=6552.35..6662.91 rows=824 width=144) (actual time=9838.018..11076.822 rows=65 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=5552.33..5567.78 rows=412 width=144) (actual time=8486.654..9575.750 rows=22 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=5552.33..5553.36 rows=412 width=135) (actual time=8439.829..8761.824 rows=847578 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 52416kB
                     ->  Nested Loop  (cost=3.13..5534.43 rows=412 width=135) (actual time=20.725..7429.519 rows=847578 loops=3)
                           ->  Nested Loop  (cost=2.71..5340.74 rows=412 width=131) (actual time=20.607..3480.367 rows=847578 loops=3)
                                 Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Hash Join  (cost=2.27..5279.69 rows=55 width=126) (actual time=6.350..334.200 rows=66667 loops=3)
                                       Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       ->  Nested Loop  (cost=0.71..5277.96 rows=55 width=26) (actual time=6.197..303.866 rows=66667 loops=3)
                                             ->  Nested Loop  (cost=0.42..5261.26 rows=55 width=18) (actual time=6.119..92.188 rows=66667 loops=3)
                                                   ->  Parallel Seq Scan on part  (cost=0.00..5138.67 rows=14 width=4) (actual time=5.975..31.649 rows=7 loops=3)
                                                         Filter: ((p_name)::text ~~ '%shiny mined gold%'::text)
                                                         Rows Removed by Filter: 66660
                                                   ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.42..8.64 rows=12 width=14) (actual time=0.096..6.938 rows=10000 loops=20)
                                                         Index Cond: (ps_partkey = part.p_partkey)
                                             ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.30 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=200000)
                                                   Index Cond: (s_suppkey = partsupp.ps_suppkey)
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.068..0.068 rows=25 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.037..0.042 rows=25 loops=3)
                                 ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.43..1.10 rows=1 width=29) (actual time=0.005..0.042 rows=13 loops=200000)
                                       Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..0.47 rows=1 width=8) (actual time=0.004..0.004 rows=1 loops=2542733)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning time: 9.936 ms
 Execution time: 11090.092 ms
(33 rows)

